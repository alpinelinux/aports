From d2a2793073929194cdb2de31cfb331fc5e95346e Mon Sep 17 00:00:00 2001
From: Kyle Fazzari <kyrofa@ubuntu.com>
Date: Sun, 12 Nov 2017 08:08:38 -0800
Subject: [PATCH] JSResourceLocator: re-use $app_path

Signed-off-by: Kyle Fazzari <kyrofa@ubuntu.com>
---
 lib/private/Template/JSResourceLocator.php | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/lib/private/Template/JSResourceLocator.php b/lib/private/Template/JSResourceLocator.php
index 228fa09e821..93a737b66cc 100644
--- a/lib/private/Template/JSResourceLocator.php
+++ b/lib/private/Template/JSResourceLocator.php
@@ -75,14 +75,16 @@ public function doFind($script) {
 		$app_path = \OC_App::getAppPath($app);
 		$app_url = \OC_App::getAppWebPath($app);
 
-		// Account for the possibility of having symlinks in app path. Doing
-		// this in a separate variable, because an empty argument to realpath
-		// gets turned into cwd, which makes it hard to see if app_path got set.
-		$real_app_path = realpath($app_path);
+		if ($app_path !== false) {
+			// Account for the possibility of having symlinks in app path. Only
+			// do this if $app_path is set, because an empty argument to realpath
+			// gets turned into cwd.
+			$app_path = realpath($app_path);
+		}
 
 		// missing translations files fill be ignored
 		if (strpos($script, 'l10n/') === 0) {
-			$this->appendIfExist($real_app_path, $script . '.js', $app_url);
+			$this->appendIfExist($app_path, $script . '.js', $app_url);
 			return;
 		}
 
@@ -94,8 +96,8 @@ public function doFind($script) {
 			return;
 		}
 
-		if (!$this->cacheAndAppendCombineJsonIfExist($real_app_path, $script.'.json', $app)) {
-			$this->append($real_app_path, $script . '.js', $app_url);
+		if (!$this->cacheAndAppendCombineJsonIfExist($app_path, $script.'.json', $app)) {
+			$this->append($app_path, $script . '.js', $app_url);
 		}
 	}
 
