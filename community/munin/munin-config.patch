diff -ur munin-2.0.25.orig/Makefile.config munin-2.0.25/Makefile.config
--- munin-2.0.25.orig/Makefile.config	2014-11-24 22:46:24.000000000 +0100
+++ munin-2.0.25/Makefile.config	2016-04-14 00:32:53.547838027 +0200
@@ -17,35 +17,35 @@
 #
 # the base of the Munin installation.
 #
-PREFIX     = $(DESTDIR)/opt/munin
+PREFIX     = $(DESTDIR)
 
 # Where Munin keeps its configurations (server.conf, client.conf, ++)
-CONFDIR    = $(DESTDIR)/etc/opt/munin
+CONFDIR    = $(DESTDIR)/etc/munin
 
 # Server only - where to put munin-cron
-BINDIR     = $(PREFIX)/bin
+BINDIR     = $(PREFIX)/usr/bin
 
 # Client only - where to put munin-node, munin-node-configure, and munin-run
-SBINDIR    = $(PREFIX)/sbin
+SBINDIR    = $(PREFIX)/usr/sbin
 
 # Where to put text and html documentation
-DOCDIR     = $(PREFIX)/doc
+DOCDIR     = $(PREFIX)/usr/share/doc/munin
 
 # Where to put man pages
-MANDIR     = $(PREFIX)/man
+MANDIR     = $(PREFIX)/usr/share/man
 
 # Where to put internal binaries and plugin repository
-LIBDIR     = $(PREFIX)/lib
+LIBDIR     = $(PREFIX)/usr/lib/munin
 
 # Server only - Output directory
-HTMLDIR    = $(PREFIX)/www/docs
-CGIDIR     = $(PREFIX)/www/cgi
+HTMLDIR    = $(PREFIX)/usr/share/webapps/munin/html
+CGIDIR     = $(PREFIX)/usr/share/webapps/munin/cgi
 
 # Where to put internal data for master (RRD, internal files, ...)
-DBDIR      = $(DESTDIR)/var/opt/munin
+DBDIR      = $(DESTDIR)/var/lib/munin
 
 # Where to put internal data for node (plugin state, ...)
-DBDIRNODE  = $(DESTDIR)/var/opt/munin-node
+DBDIRNODE  = $(DESTDIR)/var/lib/munin-node
 
 # Client only - Where the spool files are written. Must be writable by
 # group "munin", and should be preserved between reboots
@@ -56,17 +56,17 @@
 PLUGSTATE  = $(DBDIRNODE)/plugin-state
 
 # Where Munin should place its logs.
-LOGDIR     = $(PREFIX)/log/munin
+LOGDIR     = $(PREFIX)/var/log/munin
 
 # Location of PID files and other statefiles. On the server, must be
 # writable by the user "munin".
-STATEDIR   = $(DESTDIR)/var/run/munin
+STATEDIR   = $(DESTDIR)/run/munin
 
 # The perl interpreter to use
-PERL       := $(shell which perl)
+PERL       := /usr/bin/perl
 
 # The python interpreter to use (used by some plugins)
-PYTHON     := /usr/bin/env python
+PYTHON     := /usr/bin/env python2
 
 # The ruby interpreter to use (used by some plugins)
 RUBY       := /usr/bin/env ruby
@@ -89,13 +89,13 @@
 # On Linux /bin/sh, SunOS/Solaris /usr/xpg4/bin/sh or /bin/ksh
 # In general: bash or ksh will work
 #
-GOODSH     := $(shell PATH=`getconf PATH 2>/dev/null || echo $(PATH)` LANG=C sh -c 'type sh | sed "s/.* //"')
+GOODSH     := /bin/sh
 
 # Path of bash for bash specific plugins
 BASH       := /bin/bash
 
 # Server only - Where to install the perl libraries
-PERLSITELIB := $(shell $(PERL) -V:sitelib | cut -d"'" -f2)
+PERLSITELIB := $(shell $(PERL) -V:vendorlib | cut -d"'" -f2)
 PERLLIB    = $(DESTDIR)$(PERLSITELIB)
 
 # Client only - Install plugins for this architecture
@@ -106,7 +106,7 @@
 
 # How to figure out the hostname. (Only used in default configuration
 # files)
-HOSTNAME   := $(shell hostname)
+HOSTNAME   := localhost
 
 # What is the safest way to create a tempfile.
 # Default is to figure it out by testing various methods.
@@ -129,9 +129,9 @@
 # Which command to use to check if the USER and GROUP to run Munin as, exists.
 # These will work on most modern OSes:
 #
-GETENT     := $(shell which getent || which true 2>/dev/null)
-CHECKUSER  := $(shell $(GETENT) passwd $(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
-CHECKGROUP := $(shell $(GETENT) group $(GROUP) >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
+GETENT     := /bin/true
+CHECKUSER  := /bin/true
+CHECKGROUP := /bin/true
 
 # For OSX, comment out the previous two lines and comment in these
 #
@@ -153,9 +153,9 @@
 #CHECKUSER  := $(shell id $(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
 #CHECKGROUP := $(shell grep ^$(GROUP): /etc/group >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
 
-CHOWN      := chown
+CHOWN      := true
 CHMOD      := chmod
-CHGRP      := chgrp
+CHGRP      := true
 
 # Java compiler stuff - only needed on the buildhost
 JC         := javac
@@ -166,7 +166,7 @@
 #    Note that we defer JCVALID evaluation to runtime, 
 #    since $(JC) can be redefined later in a specific Makefile.config
 #    The core Makefile.config is then used as a Makefile.default
-JCVALID    = $(shell $(JC) -version >/dev/null 2>/dev/null && echo "yes")
+JCVALID    = no
 
 # Check whether setruid functionality can be used
 HASSETR    := $(shell perl -e 'use Config; my @vars=("d_setruid", "d_setreuid", "d_setresuid"); foreach my $$var (@vars) { if ($$Config{$$var} eq "define") { print "1\n"; exit 0; } } print "0\n"; exit 0;' )
