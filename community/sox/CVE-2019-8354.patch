From f70911261a84333b077c29908e1242f69d7439eb Mon Sep 17 00:00:00 2001
From: Mans Rullgard <mans@mansr.com>
Date: Wed, 24 Apr 2019 14:57:34 +0100
Subject: [PATCH] fix possible buffer size overflow in lsx_make_lpf()
 (CVE-2019-8354)

The multiplication in the size argument malloc() might overflow,
resulting in a small buffer being allocated.  Use calloc() instead.
---
 src/effects_i_dsp.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/effects_i_dsp.c b/src/effects_i_dsp.c
index a979b501..e32dfa05 100644
--- a/src/effects_i_dsp.c
+++ b/src/effects_i_dsp.c
@@ -357,7 +357,7 @@ double * lsx_make_lpf(int num_taps, double Fc, double beta, double rho,
     double scale, sox_bool dc_norm)
 {
   int i, m = num_taps - 1;
-  double * h = malloc(num_taps * sizeof(*h)), sum = 0;
+  double * h = calloc(num_taps, sizeof(*h)), sum = 0;
   double mult = scale / lsx_bessel_I_0(beta), mult1 = 1 / (.5 * m + rho);
   assert(Fc >= 0 && Fc <= 1);
   lsx_debug("make_lpf(n=%i Fc=%.7g β=%g ρ=%g dc-norm=%i scale=%g)", num_taps, Fc, beta, rho, dc_norm, scale);
-- 
2.22.0


