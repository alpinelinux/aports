# Contributor: Christopher Friedt <chrisfriedt@gmail.com>
# Maintainer: Christopher Friedt <chrisfriedt@gmail.com>
pkgname=thrift
pkgver=0.11.0
pkgrel=0
pkgdesc="Thrift is a lightweight, language-independent software stack with an associated code generation mechanism for RPC"
url="https://github.com/apache/${pkgname}/archive/${THRIFT_VER}.tar.gz"
arch="all"
license="Apache-2.0"

_luaver="5.1"

# XXX: @CF: 20180612: add mono to depends and mono-dev to depends_dev after alpine is > 3.8
# XXX: @CF: 20180614: maven tries to install into /root/.m2 inside of fakeroot, and fails. The java libraries can wait # apache-ant maven openjdk8
# XXX: @CF: 20180711: go fails due to this https://github.com/golang/go/issues/14481 (glibc-ism)
# XXX: @CF: 20180718: make check fails in test/py with "[Errno 98] Address in use"
# XXX: @CF: 20180718: nodejs builds fine, but users can more easily install it with "npm install thrift" # nodejs 
depends=""
depends_dev=""
makedepends="boost-dev libevent-dev openssl-dev zlib-dev boost libevent openssl ruby rust zlib apache-ant autoconf automake bison file flex libtool lua${_luaver} lua${_luaver}-dev pkgconfig py-six python2 python3 python2-dev python3-dev py-openssl py2-backports.ssl_match_hostname py2-six"
install=""
subpackages="
    lib${pkgname}c:c
    lib${pkgname}c-dev:cdev
    lib${pkgname}:cpp
    lib${pkgname}-dev:cppdev
    lua-${pkgname}:lua
    perl-${pkgname}:perl
"
#    py-${pkgname}:py
#    go-${pkgname}:go
# XXX: @CF: 20180715: nodejs is working fine here, but users should probably just stick with "npm install thrift"
#    node-${pkgname}:nodejs
#    java-${pkgname}:java
#    ruby-${pkgname}:ruby
#    rust-${pkgname}:rust

source="
    ${pkgname}-$pkgver.tar.gz::https://github.com/apache/${pkgname}/archive/$pkgver.tar.gz
    lib-lua-makefile-am-longnumber.patch
    lib-perl-makefile-am-prefix.patch
    lib-cpp-makefile-am-libadd-zlib-libevent.patch
    configure-ac-boost-thread-mt.patch
    lib-cpp-test-TNonblockingSSLServerTest-cpp-signal-h.patch
    lib-cpp-test-Makefile-am-TEST-ENVIRONMENT.patch
    configure-ac-lua-${_luaver}.patch
    lib-cpp-mutex-adaptive-errorcheck-recursive-init.patch
    lib-c_glib-test-testdebugproto-musl-broken-neginf.patch
    lib-c_glib-test-testtransportsslsocket-musl-different-string-for-unknown-host.patch
    lib-py-src-ext-endian-h-use-system-endian-h.patch
    test-py-ignore-poorly-written-python-triggers-eaddrinuse.patch
"

options="!strip"

builddir="$srcdir/${pkgname}-$pkgver"

prepare() {
	default_prepare
    cd "$builddir"
	sh bootstrap.sh
}

# XXX: @CF: 20180612: --with-java requires java and javac to be in the path #export PATH=${PATH}:/usr/lib/jvm/java-1.8-openjdk/bin
# XXX: @CF: 20180612: ax_lua.m4 is broken (i.e. does not recognize LUA_LIB=$(pkg-config --libs lua${_luaver}) properly), so force lua into cppflags / ldflags
build() {
	cd "$builddir"
	
	LUA_INCLUDE="$(pkg-config --cflags lua${_luaver}) -DLUA_COMPAT_MODULE" \
	LUA_LIB="$(pkg-config --libs lua${_luaver})" \
	LDFLAGS="-Wl,--no-undefined" \
	./configure \
		--build=$CBUILD \
		--host=$CHOST \
		--prefix=/usr \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--localstatedir=/var \
		--without-nodejs \
		--without-go \
		--without-python
	make
}

check() {
    cd "$builddir"
    make check
}

package() {
    local tpkgdir="${pkgdir}-tmp"
    cd "$builddir"
    make DESTDIR="$tpkgdir" install
    install -d "$pkgdir"/usr/bin
    install "$tpkgdir"/usr/bin/thrift "$pkgdir"/usr/bin/thrift
}

c() {
    local tpkgdir="${pkgdir}-tmp"
    pkgdesc="${pkgname} c bindings"
    depends="glib openssl zlib"
    install -d "$subpkgdir"/usr/lib
    mv "$tpkgdir"/usr/lib/lib${pkgname}_c_glib.so* "$subpkgdir"/usr/lib    
}

cdev() {
    local tpkgdir="${pkgdir}-tmp"
    pkgdesc="${pkgname} c bindings (development files)"
    depends="glib openssl zlib"
    install -d "$subpkgdir"/usr/lib
    mv "$tpkgdir"/usr/lib/lib${pkgname}_c_glib.a "$subpkgdir"/usr/lib
    install -d "$subpkgdir"/usr/include/${pkgname}
    mv "$tpkgdir"/usr/include/${pkgname}/c_glib "$subpkgdir"/usr/include/${pkgname}
    install -d "$subpkgdir"/usr/lib/pkgconfig
    mv "$tpkgdir"/usr/lib/pkgconfig/${pkgname}_c_glib.pc "$subpkgdir"/usr/lib/pkgconfig
}

cpp() {
    local tpkgdir="${pkgdir}-tmp"
    pkgdesc="${pkgname} c++ bindings"
    depends="boost libevent openssl zlib"
    install -d "$subpkgdir"/usr/lib
    mv \
        "$tpkgdir"/usr/lib/lib${pkgname}-${pkgver}.so \
        "$tpkgdir"/usr/lib/lib${pkgname}z-${pkgver}.so \
        "$tpkgdir"/usr/lib/lib${pkgname}nb-${pkgver}.so \
        "$subpkgdir"/usr/lib    
}

cppdev() {
    local tpkgdir="${pkgdir}-tmp"
    pkgdesc="${pkgname} c++ bindings (development files)"
    depends="openssl zlib libc-dev"
    install -d "$subpkgdir"/usr/lib
    mv \
        "$tpkgdir"/usr/lib/lib${pkgname}.a \
        "$tpkgdir"/usr/lib/lib${pkgname}z.a \
        "$tpkgdir"/usr/lib/lib${pkgname}nb.a \
        "$subpkgdir"/usr/lib
    install -d "$subpkgdir"/usr/include/${pkgname}
    mv \
        "$tpkgdir"/usr/include/${pkgname} \
        "$subpkgdir"/usr/include
    install -d "$subpkgdir"/usr/lib/pkgconfig
    mv \
        "$tpkgdir"/usr/lib/pkgconfig/${pkgname}-z.pc \
        "$tpkgdir"/usr/lib/pkgconfig/${pkgname}.pc \
        "$tpkgdir"/usr/lib/pkgconfig/${pkgname}-nb.pc \
        "$subpkgdir"/usr/lib/pkgconfig
}

#go() {
#    cd "$builddir"
#    pkgdesc="${pkgname} go bindings"
#    depends="go"
#}

#java() {
#    cd "$builddir"
#    pkgdesc="${pkgname} java bindings"
#    depends="java"
#}

lua() {
    local tpkgdir="${pkgdir}-tmp"
    pkgdesc="${pkgname} lua bindings"
    depends="lua${_luaver} lib${pkgname}"
    install -d "$subpkgdir"/usr/lib
    mv "$tpkgdir"/usr/lib/liblua*.so* "$subpkgdir"/usr/lib
    install -d "$subpkgdir"/usr/share/lua/${_luaver}
    cp "$builddir"/lib/lua/*.lua "$subpkgdir"/usr/share/lua/${_luaver} 
}

# XXX: @CF: 20180715: this works fine, but users should probably just stick with "npm install thrift"
#nodejs() {
#    cd "$builddir"
#    pkgdesc="${pkgname} nodejs bindings"
#    install -d "$subpkgdir"/usr/lib/node
#    mv lib/nodejs/lib/${pkgname} node_modules/node-int64 node_modules/ws node_modules/q "$subpkgdir"/usr/lib/node
#}

perl() {
    local tpkgdir="${pkgdir}-tmp"
    arch="noarch"
    pkgdesc="${pkgname} perl bindings"
    depends="perl-bit-vector perl-class-accessor openssl"
    install -d "$subpkgdir"/usr/lib
    mv "$tpkgdir"/usr/lib/perl5 "$subpkgdir"/usr/lib
}

py() {
    local tpkgdir="${pkgdir}-tmp"
    pkgdesc="${pkgname} python bindings"
    depends="python2 py-openssl py2-backports.ssl_match_hostname py2-six"
    install -d "$subpkgdir"/usr/lib
    mv "$tpkgdir"/usr/lib/python2.7 "$subpkgdir"/usr/lib
}

#ruby() {
#    cd "$builddir"
#    pkgdesc="${pkgname} ruby bindings"
#    depends="ruby"
#}

#rust() {
#    cd "$builddir"
#    pkgdesc="${pkgname} rust bindings"
#    depends="rust"
#}

sha512sums="39b931eff7f8694a171c30337a9d15ec93c95c3115fac4a9780386c4d0ac0b5989e6c45c80f7391f8ca785c073a1755ac0728d02403f861a2fcd4f7e69c788b3  thrift-0.11.0.tar.gz
fbcf9cb6bbb7487f04e5975625b08df6d4eb2039ba385db30f63bfb2a6e5dd91c7b51fcd1eed2622cb43d8e88629cfbd5e872f69a53035ceb545e1ba9bf048dd  lib-lua-makefile-am-longnumber.patch
266111ad305624a92b88941b7660beb9ebf5e95938196b5d31d910d688786b6cfc78e6a8a532869596fc68cf32109e4bf508ab79fe91da0b42b024930b487d6a  lib-perl-makefile-am-prefix.patch
c7c663717f7f192eb8028ff040e117ed8136cdfd175386bff7cce62562a97a22e11210cbfa96a89aa1179b3bfb84871f5916ec76cc9eccfa463c3c45e94fadd1  lib-cpp-makefile-am-libadd-zlib-libevent.patch
2ac0260588cbab6fa4bcd87e55a9ca60b0d23209e5c78f9509ad3f0904ff75b12bb5ceecd5eb59dc7232648f90654caf54af1bea17b7f798cf1d95b0352614a8  configure-ac-boost-thread-mt.patch
1a326c27d798867e86ec714ba9ade1b98b2b2637c4db32c9b7ca54c2cfcdde27e0cb480b6237abbc101328f1695d083c0a55728324dfdd036a6ab603d231ae66  lib-cpp-test-TNonblockingSSLServerTest-cpp-signal-h.patch
d0a0cbbb53aad966e19bd28d004991e1eb75d3acfd5284bd3f6379ef52e6e289636371c9b8ea3bbbb6e718f8f7cf0bf2be44d269e62c3588fa496e8ce059e8ea  lib-cpp-test-Makefile-am-TEST-ENVIRONMENT.patch
c25bac76c2a1a98bfa225e044c0a0ca07259069c86d985c2b2d5d01583ed31aff62ef3c03c968792410f6cb7ef88bd3fdea92bafc638081a4cd8a73c1c9cc633  configure-ac-lua-5.1.patch
b4bada1ee1f4d7135fe2fc963149870d97e9f62a502ae6b1e3b832d6fcf14344bb353e99c4c0fd4611538381b4500eeae08caff9e2fd87f45c7a633316a4a699  lib-cpp-mutex-adaptive-errorcheck-recursive-init.patch
102c41c426b7a960cb192ccc47eda5c71d46d2de5c334c95bb0ffbb29d8a1d75645dec471a15cb5af11dfa4f9efd0aed54a18bcff52fa6cc290b0d7bdd71b5d1  lib-c_glib-test-testdebugproto-musl-broken-neginf.patch
07d86d8ec02b23c6dd0a485c3727325fa0329e2d47df39c2771b4cef3539138b795a1579404696b25a97b8ac6b8ca57326ea23975df6ccd23ab8ab62e1ba35de  lib-c_glib-test-testtransportsslsocket-musl-different-string-for-unknown-host.patch
d1f2ce957b7d427be181abcc95312166d064d6dd66e878b6c3650e5170159ff4ad052b3e3cd196205fd2dac873154b7f09b2d5cb4ba03a55927a0bbe1521bf1c  lib-py-src-ext-endian-h-use-system-endian-h.patch"

