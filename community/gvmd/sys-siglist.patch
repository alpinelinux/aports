diff --git a/src/manage.c b/src/manage.c
index a98a0c1..85e3147 100644
--- a/src/manage.c
+++ b/src/manage.c
@@ -3278,7 +3278,7 @@ handle_slave_task (task_t task, target_t target,
               {
                 g_debug ("%s: Received %s signal.",
                          __FUNCTION__,
-                         sys_siglist[get_termination_signal()]);
+                         strsignal(get_termination_signal()));
               }
             if (global_current_report)
               {
@@ -3300,7 +3300,7 @@ handle_slave_task (task_t task, target_t target,
         {
           g_debug ("%s: Received %s signal.",
                    __FUNCTION__,
-                   sys_siglist[get_termination_signal()]);
+                   strsignal(get_termination_signal()));
           if (global_current_report)
             {
               set_report_scan_run_status (global_current_report,
diff --git a/src/gvmd.c b/src/gvmd.c
index 047977c..419a585 100644
--- a/src/gvmd.c
+++ b/src/gvmd.c
@@ -922,7 +922,7 @@ setup_signal_handler (int signal, void (*handler) (int), int block)
   if (sigaction (signal, &action, NULL) == -1)
     {
       g_critical ("%s: failed to register %s handler",
-                  __FUNCTION__, sys_siglist[signal]);
+                  __FUNCTION__, strsignal(signal));
       exit (EXIT_FAILURE);
     }
 }
@@ -953,7 +953,7 @@ setup_signal_handler_info (int signal,
   if (sigaction (signal, &action, NULL) == -1)
     {
       g_critical ("%s: failed to register %s handler",
-                  __FUNCTION__, sys_siglist[signal]);
+                  __FUNCTION__, strsignal(signal));
       exit (EXIT_FAILURE);
     }
 }
@@ -1258,7 +1258,7 @@ serve_and_schedule ()
       if (termination_signal)
         {
           g_debug ("Received %s signal",
-                   sys_siglist[termination_signal]);
+                   strsignal(termination_signal));
           cleanup ();
           /* Raise signal again, to exit with the correct return value. */
           setup_signal_handler (termination_signal, SIG_DFL, 0);
@@ -1347,7 +1347,7 @@ serve_and_schedule ()
       if (termination_signal)
         {
           g_debug ("Received %s signal",
-                   sys_siglist[termination_signal]);
+                   strsignal(termination_signal));
           cleanup ();
           /* Raise signal again, to exit with the correct return value. */
           setup_signal_handler (termination_signal, SIG_DFL, 0);
diff --git a/src/gmpd.c b/src/gmpd.c
index 3becfe3..e45897c 100644
--- a/src/gmpd.c
+++ b/src/gmpd.c
@@ -496,7 +496,7 @@ serve_gmp (gvm_connection_t *client_connection, const gchar *database,
         {
           g_debug ("%s: Received %s signal.",
                    __FUNCTION__,
-                   sys_siglist[get_termination_signal()]);
+                   strsignal(get_termination_signal()));
 
           goto client_free;
         }
diff --git a/src/manage_sql.c b/src/manage_sql.c
index 5fbcea4..c7c516c 100644
--- a/src/manage_sql.c
+++ b/src/manage_sql.c
@@ -18421,7 +18421,7 @@ cleanup_manage_process (gboolean cleanup)
 void
 manage_cleanup_process_error (int signal)
 {
-  g_debug ("Received %s signal", sys_siglist[signal]);
+  g_debug ("Received %s signal", strsignal(signal));
   if (sql_is_open ())
     {
       if (current_scanner_task)
