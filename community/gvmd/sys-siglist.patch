diff --git a/src/gmpd.c b/src/gmpd.c
index 5d39430..1b0159f 100644
--- a/src/gmpd.c
+++ b/src/gmpd.c
@@ -569,7 +569,7 @@ serve_gmp (gvm_connection_t *client_connection,
         {
           g_debug ("%s: Received %s signal.",
                    __FUNCTION__,
-                   sys_siglist[get_termination_signal ()]);
+                   strsignal(get_termination_signal ()));
 
           if (openvas_scanner_connected ())
             {
diff --git a/src/gvmd.c b/src/gvmd.c
index bee8d65..6d35464 100644
--- a/src/gvmd.c
+++ b/src/gvmd.c
@@ -932,7 +932,7 @@ setup_signal_handler (int signal, void (*handler) (int), int block)
   if (sigaction (signal, &action, NULL) == -1)
     {
       g_critical (
-        "%s: failed to register %s handler", __FUNCTION__, sys_siglist[signal]);
+        "%s: failed to register %s handler", __FUNCTION__, strsignal(signal));
       exit (EXIT_FAILURE);
     }
 }
@@ -963,7 +963,7 @@ setup_signal_handler_info (int signal,
   if (sigaction (signal, &action, NULL) == -1)
     {
       g_critical (
-        "%s: failed to register %s handler", __FUNCTION__, sys_siglist[signal]);
+        "%s: failed to register %s handler", __FUNCTION__, strsignal(signal));
       exit (EXIT_FAILURE);
     }
 }
@@ -1330,7 +1330,7 @@ serve_and_schedule ()
 
       if (termination_signal)
         {
-          g_debug ("Received %s signal", sys_siglist[termination_signal]);
+          g_debug ("Received %s signal", strsignal(termination_signal));
           cleanup ();
           /* Raise signal again, to exit with the correct return value. */
           setup_signal_handler (termination_signal, SIG_DFL, 0);
@@ -1417,7 +1417,7 @@ serve_and_schedule ()
 
       if (termination_signal)
         {
-          g_debug ("Received %s signal", sys_siglist[termination_signal]);
+          g_debug ("Received %s signal", strsignal(termination_signal));
           cleanup ();
           /* Raise signal again, to exit with the correct return value. */
           setup_signal_handler (termination_signal, SIG_DFL, 0);
diff --git a/src/manage.c b/src/manage.c
index 3e66c1e..7d259c6 100644
--- a/src/manage.c
+++ b/src/manage.c
@@ -3812,7 +3812,7 @@ handle_slave_task (task_t task,
               {
                 g_debug ("%s: Received %s signal.",
                          __FUNCTION__,
-                         sys_siglist[get_termination_signal ()]);
+                         strsignal(get_termination_signal ()));
               }
             if (global_current_report)
               {
@@ -3832,7 +3832,7 @@ handle_slave_task (task_t task,
         {
           g_debug ("%s: Received %s signal.",
                    __FUNCTION__,
-                   sys_siglist[get_termination_signal ()]);
+                   strsignal(get_termination_signal ()));
           if (global_current_report)
             {
               set_report_scan_run_status (global_current_report,
diff --git a/src/manage_sql.c b/src/manage_sql.c
index ff88628..f21b0b5 100644
--- a/src/manage_sql.c
+++ b/src/manage_sql.c
@@ -18256,7 +18256,7 @@ cleanup_manage_process (gboolean cleanup)
 void
 manage_cleanup_process_error (int signal)
 {
-  g_debug ("Received %s signal", sys_siglist[signal]);
+  g_debug ("Received %s signal", strsignal(signal));
   if (sql_is_open ())
     {
       if (current_scanner_task)
