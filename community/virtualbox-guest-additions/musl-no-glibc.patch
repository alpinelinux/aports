--- ./src/VBox/Runtime/r3/linux/thread-affinity-linux.cpp.orig
+++ ./src/VBox/Runtime/r3/linux/thread-affinity-linux.cpp
@@ -32,6 +32,8 @@
 # define _GNU_SOURCE
 #endif
 #include <features.h>
+
+#if defined(__GLIBC__)
 #if __GLIBC_PREREQ(2,4)
 
 #include <sched.h>
@@ -87,6 +89,11 @@
 
     return VINF_SUCCESS;
 }
+
+#else
+# include "../../generic/RTThreadGetAffinity-stub-generic.cpp"
+# include "../../generic/RTThreadSetAffinity-stub-generic.cpp"
+#endif
 
 #else
 # include "../../generic/RTThreadGetAffinity-stub-generic.cpp"
--- ./src/VBox/Runtime/r3/linux/semeventmulti-linux.cpp.orig
+++ ./src/VBox/Runtime/r3/linux/semeventmulti-linux.cpp
@@ -26,7 +26,7 @@
 
 
 #include <features.h>
-#if __GLIBC_PREREQ(2,6) && !defined(IPRT_WITH_FUTEX_BASED_SEMS)
+#if defined(__GLIBC__) && !defined(IPRT_WITH_FUTEX_BASED_SEMS)
 
 /*
  * glibc 2.6 fixed a serious bug in the mutex implementation. We wrote this
--- ./src/VBox/Runtime/r3/linux/semevent-linux.cpp.orig
+++ ./src/VBox/Runtime/r3/linux/semevent-linux.cpp
@@ -25,7 +25,7 @@
  */
 
 #include <features.h>
-#if __GLIBC_PREREQ(2,6) && !defined(IPRT_WITH_FUTEX_BASED_SEMS)
+#if defined(__GLIBC__) && !defined(IPRT_WITH_FUTEX_BASED_SEMS)
 
 /*
  * glibc 2.6 fixed a serious bug in the mutex implementation. We wrote this
