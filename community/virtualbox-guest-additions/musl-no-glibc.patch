--- ./src/VBox/Runtime/r3/linux/thread-affinity-linux.cpp.orig
+++ ./src/VBox/Runtime/r3/linux/thread-affinity-linux.cpp
@@ -32,6 +32,8 @@
 # define _GNU_SOURCE
 #endif
 #include <features.h>
+
+#if defined(__GLIBC__)
 #if __GLIBC_PREREQ(2,4)
 
 #include <sched.h>
@@ -87,6 +89,11 @@
 
     return VINF_SUCCESS;
 }
+
+#else
+# include "../../generic/RTThreadGetAffinity-stub-generic.cpp"
+# include "../../generic/RTThreadSetAffinity-stub-generic.cpp"
+#endif
 
 #else
 # include "../../generic/RTThreadGetAffinity-stub-generic.cpp"
--- ./src/VBox/Runtime/r3/linux/semeventmulti-linux.cpp.orig
+++ ./src/VBox/Runtime/r3/linux/semeventmulti-linux.cpp
@@ -26,7 +26,7 @@
 
 
 #include <features.h>
-#if __GLIBC_PREREQ(2,6) && !defined(IPRT_WITH_FUTEX_BASED_SEMS)
+#if defined(__GLIBC__) && !defined(IPRT_WITH_FUTEX_BASED_SEMS)
 
 /*
  * glibc 2.6 fixed a serious bug in the mutex implementation. We wrote this
--- ./src/VBox/Runtime/r3/linux/semevent-linux.cpp.orig
+++ ./src/VBox/Runtime/r3/linux/semevent-linux.cpp
@@ -25,7 +25,7 @@
  */
 
 #include <features.h>
-#if __GLIBC_PREREQ(2,6) && !defined(IPRT_WITH_FUTEX_BASED_SEMS)
+#if defined(__GLIBC__) && !defined(IPRT_WITH_FUTEX_BASED_SEMS)
 
 /*
  * glibc 2.6 fixed a serious bug in the mutex implementation. We wrote this
--- src/Config.kmk.orig
+++ src/Config.kmk
@@ -6610,7 +6610,6 @@
 # than what we are targetting, and do not use the stack protector, which
 # needs glibc 2.4 or later.
 TEMPLATE_VBOXGUESTR3EXE_CXXFLAGS.linux    = \
-	-include $(PATH_ROOT)/include/iprt/linux/symvers.h \
 	$(VBOX_GCC_fno-stack-protector)
 TEMPLATE_VBOXGUESTR3EXE_CFLAGS.linux      = $(TEMPLATE_VBOXGUESTR3EXE_CXXFLAGS.linux)
 # The GNU_HASH ELF tag is not supported by older systems.
