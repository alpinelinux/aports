diff --git a/patchwork/api/bundle.py b/patchwork/api/bundle.py
index b0005da..14c109b 100644
--- a/patchwork/api/bundle.py
+++ b/patchwork/api/bundle.py
@@ -81,7 +81,7 @@ class BundleMixin(object):
 class BundleList(BundleMixin, ListAPIView):
     """List bundles."""
 
-    filter_class = BundleFilterSet
+    filter_class = filterset_class = BundleFilterSet
     search_fields = ('name',)
     ordering_fields = ('id', 'name', 'owner')
     ordering = 'id'
diff --git a/patchwork/api/check.py b/patchwork/api/check.py
index 1498abb..5873649 100644
--- a/patchwork/api/check.py
+++ b/patchwork/api/check.py
@@ -93,7 +93,7 @@ class CheckSerializer(HyperlinkedModelSerializer):
 class CheckMixin(object):
 
     serializer_class = CheckSerializer
-    filter_class = CheckFilterSet
+    filter_class = filterset_class = CheckFilterSet
 
     def get_queryset(self):
         patch_id = self.kwargs['patch_id']
diff --git a/patchwork/api/cover.py b/patchwork/api/cover.py
index b497fd8..53f9135 100644
--- a/patchwork/api/cover.py
+++ b/patchwork/api/cover.py
@@ -97,7 +97,7 @@ class CoverLetterList(ListAPIView):
     """List cover letters."""
 
     serializer_class = CoverLetterListSerializer
-    filter_class = CoverLetterFilterSet
+    filter_class = filterset_class = CoverLetterFilterSet
     search_fields = ('name',)
     ordering_fields = ('id', 'name', 'date', 'submitter')
     ordering = 'id'
diff --git a/patchwork/api/event.py b/patchwork/api/event.py
index cce25a7..5b290e5 100644
--- a/patchwork/api/event.py
+++ b/patchwork/api/event.py
@@ -89,7 +89,7 @@ class EventList(ListAPIView):
     """List events."""
 
     serializer_class = EventSerializer
-    filter_class = EventFilterSet
+    filter_class = filterset_class = EventFilterSet
     page_size_query_param = None  # fixed page size
     ordering_fields = ()
     ordering = '-date'
diff --git a/patchwork/api/patch.py b/patchwork/api/patch.py
index 7b8e12e..46371f4 100644
--- a/patchwork/api/patch.py
+++ b/patchwork/api/patch.py
@@ -179,7 +179,7 @@ class PatchList(ListAPIView):
 
     permission_classes = (PatchworkPermission,)
     serializer_class = PatchListSerializer
-    filter_class = PatchFilterSet
+    filter_class = filterset_class = PatchFilterSet
     search_fields = ('name',)
     ordering_fields = ('id', 'name', 'project', 'date', 'state', 'archived',
                        'submitter', 'check')
diff --git a/patchwork/api/series.py b/patchwork/api/series.py
index 14768ef..16a6490 100644
--- a/patchwork/api/series.py
+++ b/patchwork/api/series.py
@@ -76,7 +76,7 @@ class SeriesMixin(object):
 class SeriesList(SeriesMixin, ListAPIView):
     """List series."""
 
-    filter_class = SeriesFilterSet
+    filter_class = filterset_class = SeriesFilterSet
     search_fields = ('name',)
     ordering_fields = ('id', 'name', 'date', 'submitter', 'received_all')
     ordering = 'id'
diff --git a/patchwork/compat.py b/patchwork/compat.py
index 3bbff44..d1d89c1 100644
--- a/patchwork/compat.py
+++ b/patchwork/compat.py
@@ -46,16 +46,35 @@ if settings.ENABLE_REST_API:
 # The django-filter library renamed 'Filter.name' to 'Filter.field_name' in
 # 1.1.
 #
+# DjangoFilterBackend
+
+# The django-filter library changed the default strictness level in 2.0
+#
 # https://django-filter.readthedocs.io/en/master/guide/migration.html#migrating-to-2-0
 
 if settings.ENABLE_REST_API:
     import django_filters  # noqa
+    from django_filters import rest_framework  # noqa
+    from rest_framework import exceptions  # noqa
 
     if django_filters.VERSION >= (1, 1):
         NAME_FIELD = 'field_name'
     else:
         NAME_FIELD = 'name'
 
+    if django_filters.VERSION >= (2, 0):
+        # TODO(stephenfin): Enable strict mode in API v2.0, possibly with a
+        # bump in the minimum version of django-filter [1]
+        #
+        # [1] https://github.com/carltongibson/django-filter/pull/983
+        class DjangoFilterBackend(rest_framework.DjangoFilterBackend):
+            def filter_queryset(self, request, queryset, view):
+                try:
+                    return super().filter_queryset(request, queryset, view)
+                except exceptions.ValidationError:
+                    return queryset.none()
+    else:
+        DjangoFilterBackend = rest_framework.DjangoFilterBackend
 
 # reverse, reverse_lazy
 #
diff --git a/requirements-prod.txt b/requirements-prod.txt
index d249ad8..4246b61 100644
--- a/requirements-prod.txt
+++ b/requirements-prod.txt
@@ -1,5 +1,5 @@
 Django>=1.8,<2.0
-djangorestframework>=3.4,<3.7
-django-filter>=1.0,<1.1
+djangorestframework>=3.4,<3.9
+django-filter==2.0.0
 psycopg2>=2.7,<2.8
 sqlparse==0.2.4

