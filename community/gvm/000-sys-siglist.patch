diff --git a/src/manage_sql.c b/src/manage_sql.c
index 0ad35e7..c84d722 100644
--- a/src/manage_sql.c
+++ b/src/manage_sql.c
@@ -15920,7 +15920,7 @@ cleanup_manage_process (gboolean cleanup)
 void
 manage_cleanup_process_error (int signal)
 {
-  g_debug ("Received %s signal.\n", sys_siglist[signal]);
+  g_debug ("Received %s signal.\n", strsignal(signal));
   if (sql_is_open ())
     {
       if (current_scanner_task)
diff --git a/src/openvasmd.c b/src/openvasmd.c
index 891a747..d3feba1 100644
--- a/src/openvasmd.c
+++ b/src/openvasmd.c
@@ -780,7 +780,7 @@ setup_signal_handler (int signal, void (*handler) (int), int block)
   if (sigaction (signal, &action, NULL) == -1)
     {
       g_critical ("%s: failed to register %s handler\n",
-                  __FUNCTION__, sys_siglist[signal]);
+                  __FUNCTION__, strsignal(signal));
       exit (EXIT_FAILURE);
     }
 }
@@ -811,7 +811,7 @@ setup_signal_handler_info (int signal,
   if (sigaction (signal, &action, NULL) == -1)
     {
       g_critical ("%s: failed to register %s handler\n",
-                  __FUNCTION__, sys_siglist[signal]);
+                  __FUNCTION__, strsignal(signal));
       exit (EXIT_FAILURE);
     }
 }
@@ -1238,7 +1238,7 @@ serve_and_schedule ()
       if (termination_signal)
         {
           g_debug ("Received %s signal.\n",
-                   sys_siglist[termination_signal]);
+                   strsignal(termination_signal));
           cleanup ();
           /* Raise signal again, to exit with the correct return value. */
           setup_signal_handler (termination_signal, SIG_DFL, 0);
@@ -1248,7 +1248,7 @@ serve_and_schedule ()
 
       if (sighup_update_nvt_cache)
         {
-          g_debug ("Received %s signal.\n", sys_siglist[SIGHUP]);
+          g_debug ("Received %s signal.\n", strsignal(SIGHUP));
           sighup_update_nvt_cache = 0;
           fork_update_nvt_cache ();
         }
@@ -1307,7 +1307,7 @@ serve_and_schedule ()
       if (termination_signal)
         {
           g_debug ("Received %s signal.\n",
-                   sys_siglist[termination_signal]);
+                   strsignal(termination_signal));
           cleanup ();
           /* Raise signal again, to exit with the correct return value. */
           setup_signal_handler (termination_signal, SIG_DFL, 0);
@@ -1317,7 +1317,7 @@ serve_and_schedule ()
 
       if (sighup_update_nvt_cache)
         {
-          g_debug ("Received %s signal.\n", sys_siglist[SIGHUP]);
+          g_debug ("Received %s signal.\n", strsignal(SIGHUP));
           sighup_update_nvt_cache = 0;
           fork_update_nvt_cache ();
         }

diff --git a/src/manage.c b/src/manage.c
index 706dcb9..eee888a 100644
--- a/src/manage.c
+++ b/src/manage.c
@@ -3520,7 +3520,7 @@ handle_slave_task (task_t task, target_t target,
               {
                 g_debug ("%s: Received %s signal.",
                          __FUNCTION__,
-                         sys_siglist[get_termination_signal()]);
+                         strsignal(get_termination_signal()));
               }
             if (current_report)
               {
@@ -3541,7 +3541,7 @@ handle_slave_task (task_t task, target_t target,
         {
           g_debug ("%s: Received %s signal.",
                    __FUNCTION__,
-                   sys_siglist[get_termination_signal()]);
+                   strsignal(get_termination_signal()));
           if (current_report)
             {
               set_report_scan_run_status (current_report,
diff --git a/src/ompd.c b/src/ompd.c
index 92d24d6..13b7760 100644
--- a/src/ompd.c
+++ b/src/ompd.c
@@ -587,7 +587,7 @@ serve_omp (openvas_connection_t *client_connection, const gchar *database,
         {
           g_debug ("%s: Received %s signal.",
                    __FUNCTION__,
-                   sys_siglist[get_termination_signal()]);
+                   strsignal(get_termination_signal()));
 
           if (openvas_scanner_connected ())
             {
