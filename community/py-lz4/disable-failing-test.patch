# issue opened: https://github.com/python-lz4/python-lz4/issues/19

--- lz4-0.9.0/tests/test_frame.py.orig
+++ lz4-0.9.0/tests/test_frame.py
@@ -211,37 +211,6 @@
         pool.close()
         self.assertEqual(data, out)
 
-    def test_compress_begin_update_end_no_auto_flush_not_defaults_threaded(self):
-        data = [os.urandom(3 * 256 * 1024) for i in range(100)]
-
-        def roundtrip(x):
-            context = lz4frame.create_compression_context()
-            self.assertNotEqual(context, None)
-            compressed = lz4frame.compress_begin(
-                context,
-                block_size=lz4frame.BLOCKSIZE_MAX256KB,
-                block_mode=lz4frame.BLOCKMODE_LINKED,
-                compression_level=lz4frame.COMPRESSIONLEVEL_MAX,
-                auto_flush=0
-            )
-            chunk_size = 128 * 1024 # 128 kb, half of block size
-            start = 0
-            end = start + chunk_size
-
-            while start <= len(x):
-                compressed += lz4frame.compress_update(context, x[start:end])
-                start = end
-                end = start + chunk_size
-
-            compressed += lz4frame.compress_end(context)
-            decompressed = lz4frame.decompress(compressed)
-            return decompressed
-
-        pool = ThreadPool(8)
-        out = pool.map(roundtrip, data)
-        pool.close()
-        self.assertEqual(data, out)
-
     def test_LZ4FrameCompressor(self):
         input_data = b"2099023098234882923049823094823094898239230982349081231290381209380981203981209381238901283098908123109238098123"
         with lz4frame.LZ4FrameCompressor() as compressor:
