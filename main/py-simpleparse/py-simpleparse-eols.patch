=== modified file 'examples/__init__.py'
--- examples/__init__.py	2008-11-09 22:58:29 +0000
+++ examples/__init__.py	2011-08-17 18:31:28 +0000
@@ -4,4 +4,4 @@
 well as a demonstration of using "pre-built"
 parser nodes (particularly one based on the re
 module).
-'''
\ No newline at end of file
+'''

=== modified file 'examples/simpleexample2_2.py'
--- examples/simpleexample2_2.py	2008-11-09 22:58:29 +0000
+++ examples/simpleexample2_2.py	2011-08-17 20:06:58 +0000
@@ -34,4 +34,4 @@
 	for testData in testEquality:
 		success, children, nextcharacter = parser.parse( testData, production=production)
 		assert success and nextcharacter==len(testData), """Wasn't able to parse %s as a %s (%s chars parsed of %s), returned value was %s"""%( repr(testData), production, nextcharacter, len(testData), (success, children, nextcharacter))
-	
\ No newline at end of file
+

=== modified file 'examples/vrml.py'
--- examples/vrml.py	2008-11-09 22:58:29 +0000
+++ examples/vrml.py	2011-08-17 20:07:12 +0000
@@ -57,4 +57,4 @@
 		success, tags, next = parser.parse( data)
 		d = time.time()-t
 		print "parsed %s characters of %s in %s seconds (%scps)"%( next, len(data), d, next/(d or 0.000000001) )
-	
\ No newline at end of file
+

