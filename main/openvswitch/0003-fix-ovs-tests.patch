Reported-by: Stuart Cardall <developer@it-offshore.co.uk>
Reported-at: http://openvswitch.org/pipermail/discuss/2016-September/022803.html
Signed-off-by: Ben Pfaff <blp@ovn.org>
---
 AUTHORS      | 1 +
 tests/ovn.at | 4 ++--
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/AUTHORS b/AUTHORS
index 371c683..a7ae253 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -444,6 +444,7 @@ Sabyasachi Sengupta     Sabyasachi.Sengupta@alcatel-lucent.com
 Salvatore Cambria       salvatore.cambria@citrix.com
 Soner Sevinc            sevincs@vmware.com
 Stephen Hemminger       shemminger@vyatta.com
+Stuart Cardall          developer@it-offshore.co.uk
 Suganya Ramachandran    suganyar@vmware.com
 Taekho Nam              thnam@smartx.kr
 Takayuki HAMA           t-hama@cb.jp.nec.com
diff --git a/tests/ovn.at b/tests/ovn.at
index 677ab46..6a8e291 100644
--- a/tests/ovn.at
+++ b/tests/ovn.at
@@ -4392,9 +4392,9 @@ test_datapath_in_of_rules() {
     # magic keyword that represents one, based on the exit status of
     # a quiet grep
     if test $expect_datapath != 0; then
-       AT_CHECK([grep --quiet -i 'metadata=' stdout], [0], [ignore-nolog])
+       AT_CHECK([grep -q -i 'metadata=' stdout], [0], [ignore-nolog])
     else
-       AT_CHECK([grep --quiet -i 'metadata=' stdout], [1], [ignore-nolog])
+       AT_CHECK([grep -q -i 'metadata=' stdout], [1], [ignore-nolog])
     fi
 }
 
-- 
2.1.3



POSIX defines "ps" -o and -p options, but the "ps" implementation in
busybox (used in Alpine Linux) doesn't support -p, which makes some tests
fail for no good reason.  Therefore, this commit makes the testsuite
instead check for support for the Linux-specific /proc-based way to find
the parent of a process and prefer that over "ps" when available.

Reported-by: Stuart Cardall <developer@it-offshore.co.uk>
Reported-at: http://openvswitch.org/pipermail/discuss/2016-September/022803.html
Signed-off-by: Ben Pfaff <blp@ovn.org>
---
 tests/daemon-py.at  | 16 ++++++++--------
 tests/daemon.at     | 12 ++++++------
 tests/ovs-macros.at | 14 ++++++++++++++
 3 files changed, 28 insertions(+), 14 deletions(-)

diff --git a/tests/daemon-py.at b/tests/daemon-py.at
index 11833c8..a32762b 100644
--- a/tests/daemon-py.at
+++ b/tests/daemon-py.at
@@ -40,7 +40,7 @@ m4_define([DAEMON_MONITOR_PYN],
    # Check that the pidfile names a running process,
    # and that the parent process of that process is our child process.
    AT_CHECK([kill -0 `cat pid`], [0], [], [], [kill `cat parent`])
-   AT_CHECK([ps -o ppid= -p `cat pid` > parentpid],
+   AT_CHECK([parent_pid `cat pid` > parentpid],
      [0], [], [], [kill `cat parent`])
    AT_CHECK(
      [parentpid=`cat parentpid` &&
@@ -57,7 +57,7 @@ m4_define([DAEMON_MONITOR_PYN],
    AT_CHECK([cp pid newpid], [0], [], [], [kill `cat parent`])
    # Check that the pidfile names a running process,
    # and that the parent process of that process is our child process.
-   AT_CHECK([ps -o ppid= -p `cat pid` > parentpid],
+   AT_CHECK([parent_pid `cat pid` > parentpid],
      [0], [], [], [kill `cat parent`])
    AT_CHECK(
      [parentpid=`cat parentpid` &&
@@ -89,7 +89,7 @@ m4_define([DAEMON_MONITOR_RESTART_PYN],
    # Check that the pidfile names a running process,
    # and that the parent process of that process is our child process.
    AT_CHECK([kill -0 `cat pid`], [0], [], [], [kill `cat parent`])
-   AT_CHECK([ps -o ppid= -p `cat pid` > parentpid],
+   AT_CHECK([parent_pid `cat pid` > parentpid],
      [0], [], [], [kill `cat parent`])
    AT_CHECK(
      [parentpid=`cat parentpid` &&
@@ -106,7 +106,7 @@ m4_define([DAEMON_MONITOR_RESTART_PYN],
    AT_CHECK([cp pid newpid], [0], [], [], [kill `cat parent`])
    # Check that the pidfile names a running process,
    # and that the parent process of that process is our child process.
-   AT_CHECK([ps -o ppid= -p `cat pid` > parentpid],
+   AT_CHECK([parent_pid `cat pid` > parentpid],
      [0], [], [], [kill `cat parent`])
    AT_CHECK(
      [parentpid=`cat parentpid` &&
@@ -167,9 +167,9 @@ m4_define([DAEMON_DETACH_MONITOR_PYN],
    # and that the parent process of that process is a running process,
    # and that the parent process of that process is init.
    CHECK([kill -0 `cat daemon`])
-   CHECK([ps -o ppid= -p `cat daemon` > monitor])
+   CHECK([parent_pid `cat daemon` > monitor])
    CHECK([kill -0 `cat monitor`])
-   CHECK([ps -o ppid= -p `cat monitor` > init])
+   CHECK([parent_pid `cat monitor` > init])
    CHECK([test `cat init` != $$])
    # Kill the daemon process, making it look like a segfault,
    # and wait for a new daemon process to get spawned.
@@ -183,10 +183,10 @@ m4_define([DAEMON_DETACH_MONITOR_PYN],
    # and that the parent process of that process is our child process.
    CHECK([kill -0 `cat daemon`])
    CHECK([diff olddaemon newdaemon], [1], [ignore])
-   CHECK([ps -o ppid= -p `cat daemon` > newmonitor])
+   CHECK([parent_pid `cat daemon` > newmonitor])
    CHECK([diff monitor newmonitor])
    CHECK([kill -0 `cat newmonitor`])
-   CHECK([ps -o ppid= -p `cat newmonitor` > init])
+   CHECK([parent_pid `cat newmonitor` > init])
    CHECK([test `cat init` != $$])
    # Kill the daemon process with SIGTERM, and wait for the daemon
    # and the monitor processes to go away and the pidfile to get deleted.
diff --git a/tests/daemon.at b/tests/daemon.at
index cf95cde..817d9fe 100644
--- a/tests/daemon.at
+++ b/tests/daemon.at
@@ -41,7 +41,7 @@ OVS_WAIT_UNTIL([test -s pid], [kill `cat parent`])
 # Check that the pidfile names a running process,
 # and that the parent process of that process is our child process.
 AT_CHECK([kill -0 `cat pid`], [0], [], [], [kill `cat parent`])
-AT_CHECK([ps -o ppid= -p `cat pid` > parentpid],
+AT_CHECK([parent_pid `cat pid` > parentpid],
   [0], [], [], [kill `cat parent`])
 AT_CHECK(
   [parentpid=`cat parentpid` && 
@@ -63,7 +63,7 @@ OVS_WAIT_UNTIL([test -s pid && test `cat pid` != `cat oldpid`],
 AT_CHECK([cp pid newpid], [0], [], [], [kill `cat parent`])
 # Check that the pidfile names a running process,
 # and that the parent process of that process is our child process.
-AT_CHECK([ps -o ppid= -p `cat pid` > parentpid],
+AT_CHECK([parent_pid `cat pid` > parentpid],
   [0], [], [], [kill `cat parent`])
 AT_CHECK(
   [parentpid=`cat parentpid` && 
@@ -120,9 +120,9 @@ AT_CHECK([test -s daemon])
 # and that the parent process of that process is a running process,
 # and that the parent process of that process is init.
 CHECK([kill -0 `cat daemon`])
-CHECK([ps -o ppid= -p `cat daemon` > monitor])
+CHECK([parent_pid `cat daemon` > monitor])
 CHECK([kill -0 `cat monitor`])
-CHECK([ps -o ppid= -p `cat monitor` > init])
+CHECK([parent_pid `cat monitor` > init])
 CHECK([test `cat init` != $$])
 # Kill the daemon process, making it look like a segfault,
 # and wait for a new daemon process to get spawned.
@@ -136,10 +136,10 @@ CHECK([cp daemon newdaemon])
 # and that the parent process of that process is our child process.
 CHECK([kill -0 `cat daemon`])
 CHECK([diff olddaemon newdaemon], [1], [ignore])
-CHECK([ps -o ppid= -p `cat daemon` > newmonitor])
+CHECK([parent_pid `cat daemon` > newmonitor])
 CHECK([diff monitor newmonitor])
 CHECK([kill -0 `cat newmonitor`])
-CHECK([ps -o ppid= -p `cat newmonitor` > init])
+CHECK([parent_pid `cat newmonitor` > init])
 CHECK([test `cat init` != $$])
 # Kill the daemon process with SIGTERM, and wait for the daemon
 # and the monitor processes to go away and the pidfile to get deleted.
diff --git a/tests/ovs-macros.at b/tests/ovs-macros.at
index fadd2be..f3b7c36 100644
--- a/tests/ovs-macros.at
+++ b/tests/ovs-macros.at
@@ -99,6 +99,20 @@ if test "$IS_WIN32" = "yes"; then
         return $retval
     }
 fi
+
+# parent_pid PID
+#
+# Prints the PID of the parent of process PID.
+parent_pid () {
+    # Using "ps" is portable to any POSIX system, but busybox "ps" (used in
+    # e.g. Alpine Linux) is noncompliant, so we use a Linux-specific approach
+    # when it's available.
+    if test ! -e /proc/$1/status; then
+        ps -o ppid= -p $1
+    else
+        sed -n 's/^PPid:	\([0-9]*\)/\1/p' /proc/$1/status
+    fi
+}
 ]
 m4_divert_pop([PREPARE_TESTS])
 
-- 
2.1.3



glibc formats single zeros as 0: fec0:0:1234:f045:8fff:1111:fe4e:571
Musl formats single zeros as ::: fec0::1234:f045:8fff:1111:fe4e:571

This patch makes the OVS testsuite tolerate either one.

Reported-by: Stuart Cardall <developer@it-offshore.co.uk>
Reported-at: http://openvswitch.org/pipermail/discuss/2016-September/022803.html
Signed-off-by: Ben Pfaff <blp@ovn.org>
---
 tests/ovs-ofctl.at | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/tests/ovs-ofctl.at b/tests/ovs-ofctl.at
index 0e6b92c..cbb818e 100644
--- a/tests/ovs-ofctl.at
+++ b/tests/ovs-ofctl.at
@@ -508,7 +508,11 @@ ip,actions=ct(commit,exec(load(1->NXM_NX_CT_MARK[[]])))
 ip,actions=ct(commit,exec(load(0x1->NXM_NX_CT_LABEL[[]])))
 ])
 AT_CHECK([ovs-ofctl -F nxm parse-flows flows.txt], [0], [stdout])
-AT_CHECK([[sed 's/ (xid=0x[0-9a-fA-F]*)//' stdout]], [0], [dnl
+
+# The substitution for fec0:0: is because some libcs (e.g. MUSL)
+# abbreviate a single zero and others (e.g. glibc) don't.
+AT_CHECK([[sed 's/ (xid=0x[0-9a-fA-F]*)//
+s/fec0:0:/fec0::/g' stdout]], [0], [dnl
 usable protocols: NXM,OXM
 chosen protocol: NXM-table_id
 NXT_FLOW_MOD: ADD tcp,tp_src=123 actions=FLOOD
@@ -524,11 +528,11 @@ NXT_FLOW_MOD: ADD icmp6,in_port=3,ipv6_src=2001:db8:3c4d:1::1,icmp_type=134 acti
 NXT_FLOW_MOD: ADD udp,dl_vlan_pcp=7 idle:5 actions=strip_vlan,output:0
 NXT_FLOW_MOD: ADD tcp,nw_src=192.168.0.3,tp_dst=80 actions=set_queue:37,output:1
 NXT_FLOW_MOD: ADD udp,nw_src=192.168.0.3,tp_dst=53 actions=pop_queue,output:1
-NXT_FLOW_MOD: ADD icmp6,icmp_type=135,nd_target=fec0:0:1234:f045:8fff:1111:fe4e:571 actions=drop
-NXT_FLOW_MOD: ADD icmp6,icmp_type=135,nd_target=fec0:0:1234:f045:8fff:1111:fe4f:0/112 actions=drop
+NXT_FLOW_MOD: ADD icmp6,icmp_type=135,nd_target=fec0::1234:f045:8fff:1111:fe4e:571 actions=drop
+NXT_FLOW_MOD: ADD icmp6,icmp_type=135,nd_target=fec0::1234:f045:8fff:1111:fe4f:0/112 actions=drop
 NXT_FLOW_MOD: ADD icmp6,icmp_type=135,nd_sll=00:0a:e4:25:6b:b0 actions=drop
-NXT_FLOW_MOD: ADD icmp6,icmp_type=136,nd_target=fec0:0:1234:f045:8fff:1111:fe4e:571,nd_tll=00:0a:e4:25:6b:b1 actions=drop
-NXT_FLOW_MOD: ADD icmp6,icmp_type=136,nd_target=fec0:0:1234:f045:8fff:1111::/96,nd_tll=00:0a:e4:25:6b:b1 actions=drop
+NXT_FLOW_MOD: ADD icmp6,icmp_type=136,nd_target=fec0::1234:f045:8fff:1111:fe4e:571,nd_tll=00:0a:e4:25:6b:b1 actions=drop
+NXT_FLOW_MOD: ADD icmp6,icmp_type=136,nd_target=fec0::1234:f045:8fff:1111::/96,nd_tll=00:0a:e4:25:6b:b1 actions=drop
 NXT_FLOW_MOD: ADD priority=60000 cookie:0x123456789abcdef hard:10 actions=CONTROLLER:65535
 NXT_FLOW_MOD: ADD actions=note:41.42.43.00.00.00,note:00.01.02.03.04.05.06.07.00.00.00.00.00.00,note:00.00.00.00.00.00
 NXT_FLOW_MOD: ADD tun_id=0x1234 cookie:0x5678 actions=FLOOD
-- 
2.1.3

