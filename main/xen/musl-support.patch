--- xen-4.3.1.orig/m4/ptyfuncs.m4
+++ xen-4.3.1/m4/ptyfuncs.m4
@@ -22,7 +22,6 @@
 #endif
 int main(void) {
   openpty(0,0,0,0,0);
-  login_tty(0);
 }
 ])],[
                 break
--- xen-4.3.1.orig/tools/libxl/libxl_bootloader.c
+++ xen-4.3.1/tools/libxl/libxl_bootloader.c
@@ -85,6 +85,21 @@
 
 /*----- synchronous subroutines -----*/
 
+static int setup_console_tty(int fd)
+{
+	(void) setsid();
+#ifdef TIOCSCTTY
+	if (ioctl(fd, TIOCSCTTY, (char *)NULL) == -1)
+		return (-1);
+#endif
+	(void) dup2(fd, 0);
+	(void) dup2(fd, 1);
+	(void) dup2(fd, 2);
+	if (fd > 2)
+		(void) close(fd);
+	return (0);
+}
+
 static int setup_xenconsoled_pty(libxl__egc *egc, libxl__bootloader_state *bl,
                                  char *slave_path, size_t slave_path_len)
 {
@@ -548,7 +563,7 @@
 
     if (!pid) {
         /* child */
-        r = login_tty(libxl__carefd_fd(bl->ptys[0].slave));
+        r = setup_console_tty(libxl__carefd_fd(bl->ptys[0].slave));
         if (r) { LOGED(ERROR, bl->domid, "login_tty failed"); exit(-1); }
         libxl__exec(gc, -1, -1, -1, bl->args[0], (char **) bl->args, env);
         exit(-1);
--- xen-4.3.1.orig/tools/firmware/hvmloader/acpi/acpi2_0.h
+++ b/tools/libacpi/acpi2_0.h
@@ -366,7 +366,7 @@
 /*
  * Table Signatures.
  */
-#define ACPI_2_0_RSDP_SIGNATURE ASCII64('R','S','D',' ','P','T','R',' ')
+#define ACPI_2_0_RSDP_SIGNATURE 0x2052545020445352LL /* "RSD PTR " */
 #define ACPI_2_0_FACS_SIGNATURE ASCII32('F','A','C','S')
 #define ACPI_2_0_FADT_SIGNATURE ASCII32('F','A','C','P')
 #define ACPI_2_0_MADT_SIGNATURE ASCII32('A','P','I','C')
--- xen-4.3.1.orig/tools/blktap2/vhd/lib/libvhd-journal.c
+++ xen-4.3.1/tools/blktap2/vhd/lib/libvhd-journal.c
@@ -30,6 +30,7 @@
 #include <stdlib.h>
 #include <unistd.h>
 #include <string.h>
+#include <sys/stat.h>
 
 #include "atomicio.h"
 #include "libvhd-journal.h"
--- xen-4.9.0.orig/tools/libxl/libxl_arm_acpi.c
+++ xen-4.9.0/tools/libxl/libxl_arm_acpi.c
@@ -37,7 +37,7 @@ typedef int64_t s64;
 #define BITS_PER_LONG 32
 #endif
 #endif
-#define ACPI_MACHINE_WIDTH __BITS_PER_LONG
+#define ACPI_MACHINE_WIDTH BITS_PER_LONG
 #define COMPILER_DEPENDENT_INT64 int64_t
 #define COMPILER_DEPENDENT_UINT64 uint64_t
