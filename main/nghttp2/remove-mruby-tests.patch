Disables mruby tests when running the integration tests.
This is only required after go is moved from community to main.

--- a/integration-tests/nghttpx_http1_test.go
+++ b/integration-tests/nghttpx_http1_test.go
@@ -471,6 +471,7 @@
 // TestH1H1ReqPhaseSetHeader tests mruby request phase hook
 // modifies request header fields.
 func TestH1H1ReqPhaseSetHeader(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/req-set-header.rb"}, t, func(w http.ResponseWriter, r *http.Request) {
 		if got, want := r.Header.Get("User-Agent"), "mruby"; got != want {
 			t.Errorf("User-Agent = %v; want %v", got, want)
@@ -493,6 +494,7 @@
 // TestH1H1ReqPhaseReturn tests mruby request phase hook returns
 // custom response.
 func TestH1H1ReqPhaseReturn(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/req-return.rb"}, t, func(w http.ResponseWriter, r *http.Request) {
 		t.Fatalf("request should not be forwarded")
 	})
@@ -529,6 +531,7 @@
 // TestH1H1RespPhaseSetHeader tests mruby response phase hook modifies
 // response header fields.
 func TestH1H1RespPhaseSetHeader(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/resp-set-header.rb"}, t, noopHandler)
 	defer st.Close()
 
@@ -551,6 +554,7 @@
 // TestH1H1RespPhaseReturn tests mruby response phase hook returns
 // custom response.
 func TestH1H1RespPhaseReturn(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/resp-return.rb"}, t, noopHandler)
 	defer st.Close()
 
@@ -821,6 +825,7 @@
 // TestH1H2ReqPhaseReturn tests mruby request phase hook returns
 // custom response.
 func TestH1H2ReqPhaseReturn(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--http2-bridge", "--mruby-file=" + testDir + "/req-return.rb"}, t, func(w http.ResponseWriter, r *http.Request) {
 		t.Fatalf("request should not be forwarded")
 	})
@@ -857,6 +862,7 @@
 // TestH1H2RespPhaseReturn tests mruby response phase hook returns
 // custom response.
 func TestH1H2RespPhaseReturn(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--http2-bridge", "--mruby-file=" + testDir + "/resp-return.rb"}, t, noopHandler)
 	defer st.Close()
 
@@ -1119,6 +1125,7 @@
 // TestH1ResponseBeforeRequestEnd tests the situation where response
 // ends before request body finishes.
 func TestH1ResponseBeforeRequestEnd(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/req-return.rb"}, t, func(w http.ResponseWriter, r *http.Request) {
 		t.Fatal("request should not be forwarded")
 	})
--- a/integration-tests/nghttpx_http2_test.go
+++ b/integration-tests/nghttpx_http2_test.go
@@ -969,6 +969,7 @@
 // TestH2H1ReqPhaseSetHeader tests mruby request phase hook
 // modifies request header fields.
 func TestH2H1ReqPhaseSetHeader(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/req-set-header.rb"}, t, func(w http.ResponseWriter, r *http.Request) {
 		if got, want := r.Header.Get("User-Agent"), "mruby"; got != want {
 			t.Errorf("User-Agent = %v; want %v", got, want)
@@ -991,6 +992,7 @@
 // TestH2H1ReqPhaseReturn tests mruby request phase hook returns
 // custom response.
 func TestH2H1ReqPhaseReturn(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/req-return.rb"}, t, func(w http.ResponseWriter, r *http.Request) {
 		t.Fatalf("request should not be forwarded")
 	})
@@ -1027,6 +1029,7 @@
 // TestH2H1RespPhaseSetHeader tests mruby response phase hook modifies
 // response header fields.
 func TestH2H1RespPhaseSetHeader(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/resp-set-header.rb"}, t, noopHandler)
 	defer st.Close()
 
@@ -1049,6 +1052,7 @@
 // TestH2H1RespPhaseReturn tests mruby response phase hook returns
 // custom response.
 func TestH2H1RespPhaseReturn(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/resp-return.rb"}, t, noopHandler)
 	defer st.Close()
 
@@ -2262,6 +2266,7 @@
 // TestH2H2ReqPhaseReturn tests mruby request phase hook returns
 // custom response.
 func TestH2H2ReqPhaseReturn(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--http2-bridge", "--mruby-file=" + testDir + "/req-return.rb"}, t, func(w http.ResponseWriter, r *http.Request) {
 		t.Fatalf("request should not be forwarded")
 	})
@@ -2298,6 +2303,7 @@
 // TestH2H2RespPhaseReturn tests mruby response phase hook returns
 // custom response.
 func TestH2H2RespPhaseReturn(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--http2-bridge", "--mruby-file=" + testDir + "/resp-return.rb"}, t, noopHandler)
 	defer st.Close()
 
@@ -2592,6 +2598,7 @@
 // TestH2ResponseBeforeRequestEnd tests the situation where response
 // ends before request body finishes.
 func TestH2ResponseBeforeRequestEnd(t *testing.T) {
+	t.Skip("No mruby support")
 	st := newServerTester([]string{"--mruby-file=" + testDir + "/req-return.rb"}, t, func(w http.ResponseWriter, r *http.Request) {
 		t.Fatal("request should not be forwarded")
 	})
