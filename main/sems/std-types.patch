--- ./core/sip/parse_dns.h.orig
+++ ./core/sip/parse_dns.h
@@ -34,10 +34,10 @@
 
 class dns_entry;
 
-typedef int (*dns_parse_fct)(dns_record* rr, dns_section_type t, u_char* begin, u_char* end, void* data);
+typedef int (*dns_parse_fct)(dns_record* rr, dns_section_type t, unsigned char* begin, unsigned char* end, void* data);
 
-int dns_msg_parse(u_char* msg, int len, dns_parse_fct fct, void* data);
-int dns_expand_name(u_char** ptr, u_char* begin, u_char* end, 
-		    u_char* buf, unsigned int len);
+int dns_msg_parse(unsigned char* msg, int len, dns_parse_fct fct, void* data);
+int dns_expand_name(unsigned char** ptr, unsigned char* begin, unsigned char* end, 
+		    unsigned char* buf, unsigned int len);
 
 #endif
--- ./core/sip/parse_dns.cpp.orig
+++ ./core/sip/parse_dns.cpp
@@ -6,9 +6,9 @@
 #define SECTION_COUNTS_OFF 4
 #define HEADER_OFFSET      12
 
-unsigned short dns_msg_count(u_char* begin, dns_section_type sect);
-int dns_skip_name(u_char** p, u_char* end);
-int dns_expand_name(u_char** ptr, u_char* begin, u_char* end, 
+unsigned short dns_msg_count(unsigned char* begin, dns_section_type sect);
+int dns_skip_name(unsigned char** p, unsigned char* end);
+int dns_expand_name(unsigned char** ptr, unsigned char* begin, unsigned char* end, 
 		    u_char* buf, unsigned int len);
 
 inline unsigned short dns_get_16(u_char* p)
