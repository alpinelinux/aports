# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=apk-tools
pkgver=2.6.6
pkgrel=1
pkgdesc="Alpine Package Keeper - package manager for alpine"
subpackages="$pkgname-static"
depends=
makedepends_build=""
makedepends_host="zlib-dev openssl-dev libfetch-dev"
makedepends="$makedepends_build $makedepends_host"
if [ "$CBUILD" = "$CHOST" ]; then
	subpackages="$subpackages lua5.2-apk:luaapk"
	makedepends="$makedepends lua5.2-dev"
fi
source="http://dev.alpinelinux.org/archive/$pkgname/$pkgname-$pkgver.tar.xz
	0001-implement-fetch-purge.patch
	0002-fetch-allow-enabling-simulate.patch
	"

url="http://git.alpinelinux.org/cgit/apk-tools/"
arch="all"
license=GPL2

_builddir="$srcdir/$pkgname-$pkgver"
prepare() {
	cd "$_builddir"
	sed -i -e 's:-Werror::' Make.rules
	for i in $source; do
		case $i in
		*.patch) msg "$i"; patch -p1 -i "$srcdir"/$i || return 1
		esac
	done

	echo "FULL_VERSION=$pkgver-r$pkgrel" > config.mk || return 1
	if [ "$CBUILD" = "$CHOST" ]; then
		echo "LUAAPK=YesPlease" >> config.mk
	else
		echo "LUAAPK=" >> config.mk
	fi
	echo "export LUAAPK" >> config.mk
}

build() {
	cd "$_builddir"
	make || return 1
	make static || return 1
}

package() {
	cd "$_builddir"
	make DESTDIR="$pkgdir" install
	install -d "$pkgdir"/var/lib/apk \
		"$pkgdir"/var/cache/misc \
		"$pkgdir"/etc/apk/keys \
		"$pkgdir"/etc/apk/protected_paths.d \
		|| return 1
	# the shipped README is empty
	rm -r "$pkgdir"/usr/share/
}

static() {
	pkgdesc="Alpine Package Keeper - static binary"
	install -Dm755 "$srcdir"/$pkgname-$pkgver/src/apk.static \
		"$subpkgdir"/sbin/apk.static

	# lets sign the static binary so it can be vefified from distros
	# that does not have apk-tools
	local abuild_conf=${ABUILD_CONF:-"/etc/abuild.conf"}
	local abuild_home=${ABUILD_USERDIR:-"$HOME/.abuild"}
	local abuild_userconf=${ABUILD_USERCONF:-"$abuild_home/abuild.conf"}
	[ -f "$abuild_userconf" ] && . "$abuild_userconf"
	local privkey="$PACKAGER_PRIVKEY"
	local pubkey=${PACKAGER_PUBKEY:-"${privkey}.pub"}
	local keyname=${pubkey##*/}
	${CROSS_COMPILE}strip "$subpkgdir"/sbin/apk.static
	openssl dgst -sha1 -sign "$privkey" \
		-out "$subpkgdir"/sbin/apk.static.SIGN.RSA.$keyname \
		"$subpkgdir"/sbin/apk.static || return 1
}

luaapk() {
	pkgdesc="Lua module for apk-tools"
	mkdir -p "$subpkgdir"/usr/
	mv "$pkgdir"/usr/lib "$subpkgdir"/usr/lib/
}

md5sums="5557e3da166c7a4323df25d9849f5235  apk-tools-2.6.6.tar.xz
e19cd836d0c9337cba7554ab6ca58e6f  0001-implement-fetch-purge.patch
8f58318fb02d7c58eecd2cfe183d2c55  0002-fetch-allow-enabling-simulate.patch"
sha256sums="b953d11db39049a569b6c8a03ea576b06ba311f38ca01f90ec9772eecfca092b  apk-tools-2.6.6.tar.xz
b965905cba4f3251ba22335b0627a9332f611610438a30e1966b7e24728f434c  0001-implement-fetch-purge.patch
93545cc192c47b993212f7f1a98f05faa9a13a71a7e3901bad3969b96caf4e8d  0002-fetch-allow-enabling-simulate.patch"
sha512sums="a0d3158cf5b17b4050d411e26c341f2c783fefab26418ab68115470c299b72d50278b9d6ebd8c4c0daa121a0df93aae19358cf979acf9b2245e92853b93387a4  apk-tools-2.6.6.tar.xz
817749b75bcd0d7f943326b536ee5b9086f08bc54053c7b3eca6f08eb3e94ddbf3b73b1865d927eec076394378de8b00337bff46351f4457f71fb83be020bbcc  0001-implement-fetch-purge.patch
569e7784d6444f0a8ae72e98806f33fa3ddbb302f3d6699ef12caf03e6ecb7d1e966a948db2717c2442e5fc0eb66a1246eabf8143f134205f3894d96d6fccf1d  0002-fetch-allow-enabling-simulate.patch"
