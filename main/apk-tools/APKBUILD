# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=apk-tools
pkgver=2.7.0
pkgrel=5
pkgdesc="Alpine Package Keeper - package manager for alpine"
subpackages="$pkgname-static"
depends=
makedepends_build=""
makedepends_host="zlib-dev libressl libressl-dev libfetch-dev linux-headers"
makedepends="$makedepends_build $makedepends_host"
if [ "$CBUILD" = "$CHOST" ]; then
	subpackages="$subpackages lua5.2-apk:luaapk"
	makedepends="$makedepends lua5.2-dev"
fi
source="http://dev.alpinelinux.org/archive/$pkgname/$pkgname-$pkgver.tar.xz
	0001-commit-include-limits.h-for-PATH_MAX.patch
	0001-db-prevent-umount-proc-when-it-was-mounted-by-someon.patch
	0002-db-catch-asprintf-failure.patch
	0001-print-print-warnings-and-errors-to-stderr.patch
	0001-solver-don-t-clobber-package-swaps-in-cases-where-an.patch
	"

url="http://git.alpinelinux.org/cgit/apk-tools/"
arch="all"
license=GPL2

builddir="$srcdir/$pkgname-$pkgver"
prepare() {
	default_prepare || return 1
	cd "$builddir"
	sed -i -e 's:-Werror::' Make.rules
	echo "FULL_VERSION=$pkgver-r$pkgrel" > config.mk || return 1
	if [ "$CBUILD" = "$CHOST" ]; then
		echo "LUAAPK=YesPlease" >> config.mk
	else
		echo "LUAAPK=" >> config.mk
	fi
	echo "export LUAAPK" >> config.mk
}

build() {
	cd "$builddir"
	make || return 1
	make static || return 1
}

check() {
	cd "$builddir"
	make check
}

package() {
	cd "$builddir"
	make DESTDIR="$pkgdir" install
	install -d "$pkgdir"/var/lib/apk \
		"$pkgdir"/var/cache/misc \
		"$pkgdir"/etc/apk/keys \
		"$pkgdir"/etc/apk/protected_paths.d \
		|| return 1
	# the shipped README is empty
	rm -r "$pkgdir"/usr/share/
}

static() {
	pkgdesc="Alpine Package Keeper - static binary"
	install -Dm755 "$srcdir"/$pkgname-$pkgver/src/apk.static \
		"$subpkgdir"/sbin/apk.static

	# lets sign the static binary so it can be vefified from distros
	# that does not have apk-tools
	local abuild_conf=${ABUILD_CONF:-"/etc/abuild.conf"}
	local abuild_home=${ABUILD_USERDIR:-"$HOME/.abuild"}
	local abuild_userconf=${ABUILD_USERCONF:-"$abuild_home/abuild.conf"}
	[ -f "$abuild_userconf" ] && . "$abuild_userconf"
	local privkey="$PACKAGER_PRIVKEY"
	local pubkey=${PACKAGER_PUBKEY:-"${privkey}.pub"}
	local keyname=${pubkey##*/}
	${CROSS_COMPILE}strip "$subpkgdir"/sbin/apk.static
	openssl dgst -sha1 -sign "$privkey" \
		-out "$subpkgdir"/sbin/apk.static.SIGN.RSA.$keyname \
		"$subpkgdir"/sbin/apk.static || return 1
}

luaapk() {
	pkgdesc="Lua module for apk-tools"
	mkdir -p "$subpkgdir"/usr/
	mv "$pkgdir"/usr/lib "$subpkgdir"/usr/lib/
}

sha512sums="e6bb4bdada76f5d18b9a6ec8981b4619dd2e2a517ff3248693a5b2743286e2ee605dabf775bcdbbab5dff479334662b11c3c9c296cd17e3db4fbdcdc2efe9ea7  apk-tools-2.7.0.tar.xz
a05a462982518093f2cb8d82fee3970cc8e0d46736a46679a9369e95497cca26fd2c3493bc86ebc0513757529fa9aa6b954bbf5b24992f92839573758b977cf7  0001-commit-include-limits.h-for-PATH_MAX.patch
2c2dceb8101bd9c42800a2fcdc7f22d546c548adcf860887992ad87b0246444729c56c29b2daafcd3af6ec0f92da4cba8e10506ac8c8b9024f31482033d0026d  0001-db-prevent-umount-proc-when-it-was-mounted-by-someon.patch
21764f250f682698f21b5453f5e66c4b2722585d28196ebee61360e69b07967408fff40a27fd7215d123869694f54f5cece4b23c944f4d950eca1f47cfa97501  0002-db-catch-asprintf-failure.patch
f4c6b940b1464cc4e8e671402232ff747c0fed7e45438d90a60f2489510955e5eba4fc81fee1fd050de0a82c9cc30487a3441d2a06c871a9cd38730acb725e9e  0001-print-print-warnings-and-errors-to-stderr.patch
ecd3006ed9c0002aa26edf60df5f80a48e070af42af45b6a149c65931e711e4602999b1d6086497f14f9bdfc3d3b2cd06d2c74bd07e8c3fde763cdcc66d49dce  0001-solver-don-t-clobber-package-swaps-in-cases-where-an.patch"
