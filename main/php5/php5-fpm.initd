#!/sbin/openrc-run

# If you want to run separate master process per pool, then create a symlink
# to this runscript for each pool. In that mode, the php-fpm daemon is started
# as nobody by default. You can override the user (and group) by declaring
# variable "user" and optionally "group" in conf.d file, or in the $cfgfile
# file (the former has precedence).

command="/usr/sbin/php7-fpm"
command_background="yes"
pidfile="/run/$RC_SVCNAME/php5-fpm.pid"
retry="SIGTERM/20"
extra_commands="checkconfig"
extra_started_commands="reload reopen"
required_files="$cfgfile"
description="PHP5 FastCGI Process Manager"
description_checkconfig="Run config check"
description_reload="Gracefully reload workers and config"
description_reopen="Reopen log files"

depend() {
	need net
	before apache2 lighttpd nginx
}

init_vars() {
	# Defaults for single master process with multiple pools
	if [ "$RC_SVCNAME" = "php5-fpm" ]; then
		: ${cfgfile:="/etc/php5/php-fpm.conf"}
		: ${user:="root"}
	# Defaults for master process per pool
	else
		: ${cfgfile="/etc/php5/php-fpm.d/${RC_SVCNAME#php5-fpm.}.conf"}
		: ${user:="$(conf_get user)"}
		: ${user:="nobody"}
		: ${group:="$(conf_get group)"}
	fi
	command_args="--nodaemonize --fpm-config $cfgfile --pid $pidfile"
	start_stop_daemon_args="$start_stop_daemon_args --user $user ${group:+--group $group}"
}

start_pre() {
	checkconfig || return 1
	# If unix socket is used (instead of TCP/IP), then ensure that the
	# directory exists and has correct privileges.
	local listen=$(conf_get listen)
	[ "${listen:0:1}" = "/" ] && checkpath -d -o $user:$group ${listen%/*}
	checkpath -d ${pidfile%/*}
}

reload() {
	ebegin "Reloading $RC_SVCNAME"
	start-stop-daemon --signal USR2 --pidfile $pidfile
	eend $?
}

reopen() {
	ebegin "Reopening $RC_SVCNAME log files"
	start-stop-daemon --signal USR1 --pidfile $pidfile
	eend $?
}

checkconfig() {
	init_vars
	ebegin "Checking $cfgfile"
	local out
	out="$(su -s /bin/sh -c "$command --test --fpm-config $cfgfile" $user 2>&1)" || {
		printf "%s\n" "$out"
		eend 1 "failed, please correct errors above"
		return 1
	}
}

conf_get() {
	sed -nE "s/^$1\s*=\s*\"?([^\";]+).*/\1/p" $cfgfile | head -n 1
}
