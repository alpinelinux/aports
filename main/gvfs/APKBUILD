# Contributor: Natanael Copa <ncopa@alpinelinux.org>
# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=gvfs
pkgver=1.36.1
pkgrel=0
pkgdesc="Backends for the gio framework in GLib"
url="http://ftp.gnome.org/pub/gnome/sources/gvfs/${pkgver%.*}/"
arch="all"
license="GPL"
depends=""
options="!check"  # no tests available
triggers="$pkgname.trigger=/usr/lib/gvfs"
makedepends="intltool fuse-dev libgudev-dev expat-dev samba-dev
	libsoup-dev avahi-dev libarchive-dev udisks2-dev libgphoto2-dev
	libcdio-paranoia-dev libgcrypt-dev libxslt-dev docbook-xsl
	libmtp-dev gcr-dev libcap-dev libsecret-dev libnfs-dev meson ninja"
subpackages="$pkgname-dev $pkgname-lang
	$pkgname-afp
	$pkgname-archive
	$pkgname-avahi
	$pkgname-cdda
	$pkgname-dav
	$pkgname-fuse
	$pkgname-gphoto2
	$pkgname-mtp
	$pkgname-nfs
	$pkgname-smb
	"
source="https://download.gnome.org/sources/gvfs/${pkgver%.*}/gvfs-$pkgver.tar.xz"

builddir="$srcdir/$pkgname-$pkgver"
build() {
	mkdir -p "$builddir"/build
	cd "$builddir"/build
	meson \
		--buildtype=release \
		--prefix=/usr \
		--sysconfdir=/etc \
		--libexecdir=/usr/lib/gvfs \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		-Dafc=false \
		-Dbluray=false \
		-Dgdu=false \
		-Dgoa=false \
		-Dgoogle=false \
		-Dhttp=true \
		-Dlibmtp=true \
		-Dlogind=false \
		-Dsmb=true \
		-Dsystemduserunitdir=no \
		-Dtmpfilesdir=no \
		..
	# workaround parallel build issue
	ninja common/gvfsdbus.h

	ninja
}

package() {
	cd "$builddir"/build
	DESTDIR="$pkgdir" ninja install
}

_mv_files() {
	local i
	for i in "$@"; do
		mkdir -p "$subpkgdir"/${i%/*}
		mv "$pkgdir"/$i "$subpkgdir"/$i
	done
}

fuse() {
	pkgdesc="FUSE support for gvfs"
	cd "$pkgdir"
	_mv_files usr/lib/gvfs/gvfsd-fuse
}

smb() {
	pkgdesc="Windows fileshare support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfsd-smb* \
		usr/share/gvfs/mounts/smb* \
		usr/share/glib-*/schemas/org.gnome.system.smb.gschema.xml \
		usr/share/GConf/gsettings/gvfs-smb.convert
}

mtp() {
	pkgdesc="MTP support for gvfs"
	cd "$pkgdir"
	_mv_files usr/lib/gvfs/gvfsd-mtp
}

archive() {
	pkgdesc="Archiving support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfsd-archive* \
		usr/share/gvfs/mounts/archive*
}

obexftp() {
	pkgdesc="ObexFTP support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfsd-obex* \
		usr/share/gvfs/mounts/obex*
}

gphoto2() {
	pkgdesc="gphoto2 support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfs*gphoto* \
		usr/share/gvfs/*/gphoto* \
		usr/share/dbus*/services/*GPhoto*
}

afp() {
	pkgdesc="AFP support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfs*afp* \
		usr/share/gvfs/*/afp*
}

avahi() {
	pkgdesc="DNS-SD support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfs*dns* \
		usr/share/gvfs/mounts/dns-sd.mount \
		usr/share/glib-*/schemas/org.gnome.system.dns_sd.gschema.xml \
		usr/share/GConf/gsettings/gvfs-dns-sd.convert
}

cdda() {
	pkgdesc="CDDA support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/share/gvfs/mounts/cdda.mount \
		usr/lib/gvfs/gvfsd-cdda
}

dav() {
	pkgdesc="WebDAV support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/share/gvfs/mounts/dav.mount \
		usr/share/gvfs/mounts/dav+sd.mount \
		usr/lib/gvfs/gvfsd-dav
}

nfs() {
	pkgdesc="NFS support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/share/gvfs/mounts/nfs.mount \
		usr/lib/gvfs/gvfsd-nfs
}

sha512sums="44e76722b1445835a9494ab12f6888ace05791efa48df216a47c3910d652862edf1d176cf4ef2297b8b53fc079a95f2a7b0603fc127a22134dba3a1e699e74ba  gvfs-1.36.1.tar.xz"
