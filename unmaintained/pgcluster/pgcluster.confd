# PostgreSQL's Database Directory
PGDATA="/var/lib/postgresql/pgcluster"

# PostgreSQL User
PGUSER="postgres"

# PostgreSQL Group
PGGROUP="postgres"

# control what gets started by init script
PG_START_DB="yes"
PG_START_REPLICATE="yes"
PG_START_LB="no"

# Extra options to run postmaster with, e.g.:
# -N is the maximal number of client connections
# -B is the number of shared buffers and has to be at least 2x the value for -N
# Please read the man-page to postmaster for more options. Many of these options
# can be set directly in the configuration-file.
#PGOPTS="-N 512 -B 1024"


# SERVER SHUTDOWN:
# The server will receive 3 signals in the worst case:
# 1. SIGTERM
#  This signals the server to ignore new connections and to
#  wait for all clients to end their transactions before shutting down.
#  Use WAIT_FOR_DISCONNECT to control how much time the clients
#  should have until the next signal is being sent.
# 2. SIGINT
#  Tell the server to forcefully disconnect all clients.
#  Terminating a client results in a rollback of the open transactions for this client.
#  Use WAIT_FOR_CLEANUP to determine how much time the server has
#  for cleanup.
# 3. SIGQUIT
#  This will terminate the server immediately and results in a recovery run for the next start.

# Wait for clients to disconnect
WAIT_FOR_DISCONNECT=30

# Time the server has to clean up
WAIT_FOR_CLEANUP=60

# Time the server has to quit (with a recover-run on next startup)
# Set to 0 to deactivate it
WAIT_FOR_QUIT=60

# Comment this out if you don't want to wait for the server to
# startup before continuing.  For example, if this server is a 
# PITR log shipping based replication standby
WAIT_FOR_START="-w"

# If you have to export environment variables for the database process,
# this can be done here.
#
# Example:
#   export R_HOME="/usr/lib/R"
