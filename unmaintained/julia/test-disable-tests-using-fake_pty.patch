fake_pty does not work on Alpine or just inside LXC container...?

Error During Test
  Got an exception of type ErrorException outside of a @test
  Failed to open PTY master
  Stacktrace:
   [1] open_fake_pty() at test/TestHelpers.jl:31
   [2] with_fake_pty(::TestHelpers.##5#8{Int64,Cmd,Array{Any,1},TestHelpers.#format_output#7{Bool}}) at test/TestHelpers.jl:47
   [3] #challenge_prompt#4(::Int64, ::Bool, ::Function, ::Cmd, ::Array{Any,1}) at test/TestHelpers.jl:83
   [4] (::TestHelpers.#kw##challenge_prompt)(::Array{Any,1}, ::TestHelpers.#challenge_prompt, ::Cmd, ::Array{Any,1}) at ./<missing>:0
   [5] #challenge_prompt#1(::Int64, ::Bool, ::Function, ::String, ::Array{Any,1}) at test/TestHelpers.jl:68
   [6] challenge_prompt(::String, ::Array{Any,1}) at test/TestHelpers.jl:57
   [7] (::Test47Main_libgit2.##48#97)() at test/libgit2.jl:1301

--- a/test/repl.jl
+++ b/test/repl.jl
@@ -579,7 +579,7 @@
 let exename = Base.julia_cmd()
 
 # Test REPL in dumb mode
-if !is_windows()
+if false
     TestHelpers.with_fake_pty() do slave, master
         nENV = copy(ENV)
         nENV["TERM"] = "dumb"
--- a/test/libgit2.jl
+++ b/test/libgit2.jl
@@ -1270,7 +1270,7 @@
     # The following tests require that we can fake a TTY so that we can provide passwords
     # which use the `getpass` function. At the moment we can only fake this on UNIX based
     # systems.
-    if is_unix()
+    if false
         @testset "SSH credential prompt" begin
             url = "git@github.com/test/package.jl"
 
