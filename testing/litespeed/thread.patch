--- a/src/thread/thread.h
+++ b/src/thread/thread.h
@@ -86,12 +86,6 @@
 
     int timedJoin(void **pRetVal, struct timespec *timeout)
     {   return pthread_timedjoin_np(m_tid, pRetVal, timeout);    }
-
-    int attrSetAffinity(size_t cpusetsize, const cpu_set_t *cpuset)
-    {   return pthread_attr_setaffinity_np(&m_attr, cpusetsize, cpuset);  }
-
-    int attrGetAffinity(size_t cpusetsize, cpu_set_t *pCpuSet)
-    {   return pthread_attr_getaffinity_np(&m_attr, cpusetsize, pCpuSet);  }
 #endif
 
     int attrSetDetachState(int detachstate)
--- a/src/thread/pthreadmutex.cpp
+++ b/src/thread/pthreadmutex.cpp
@@ -16,19 +16,6 @@
 *    along with this program. If not, see http://www.gnu.org/licenses/.      *
 *****************************************************************************/
 #include "pthreadmutex.h"
-#if (defined(linux) || defined(__linux) || defined(__linux__) || defined(__gnu_linux__)) && !defined( NDEBUG )
 
-#ifndef PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
-# define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP \
-    {0, 0, 0, PTHREAD_MUTEX_ERRORCHECK_NP, __LOCK_INITIALIZER}
-#endif
-
-pthread_mutex_t PThreadMutex::s_proto =
-    PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP;
-
-#else
-
 pthread_mutex_t PThreadMutex::s_proto = PTHREAD_MUTEX_INITIALIZER;
-
-#endif
 
