--- a/src/sslpp/sslcontext.cpp
+++ b/src/sslpp/sslcontext.cpp
@@ -722,8 +722,6 @@
         return 0;
 #ifdef TLSEXT_TYPE_application_layer_protocol_negotiation
     SSL_CTX_set_alpn_select_cb(m_pCtx, SSLConntext_alpn_select_cb, this);
-#endif
-#ifdef TLSEXT_TYPE_next_proto_neg
     SSL_CTX_set_next_protos_advertised_cb(m_pCtx,
                                           SslConnection_ssl_npn_advertised_cb, this);
 #else
--- a/src/sslpp/sslutil.cpp
+++ b/src/sslpp/sslutil.cpp
@@ -851,9 +851,8 @@
 {
     int ret = -1;
     BIO *pOut = BIO_new(BIO_s_mem());
-    EVP_PKEY *pKey = SSL_CTX_get0_privatekey(pCtx);
-
-    if (PEM_write_bio_PrivateKey(pOut, pKey, NULL, NULL, 0, NULL, NULL))
+    EVP_PKEY *pKey;
+    if (SSL_CTX_use_PrivateKey(pCtx, pKey) && PEM_write_bio_PrivateKey(pOut, pKey, NULL, NULL, 0, NULL, NULL))
         ret = bioToBuf(pOut, pBuf);
     BIO_free(pOut);
     return ret;
@@ -863,9 +862,8 @@
 {
     int ret = -1;
     BIO *pOut = BIO_new(BIO_s_mem());
-    X509 *pCert = SSL_CTX_get0_certificate(pCtx);
-
-    if (PEM_write_bio_X509(pOut, pCert))
+    X509 *pCert;
+    if (SSL_CTX_use_certificate(pCtx, pCert) && PEM_write_bio_X509(pOut, pCert))
         ret = bioToBuf(pOut, pBuf);
     BIO_free(pOut);
     return ret;
