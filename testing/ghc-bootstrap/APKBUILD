#-*-mode: Shell-script; coding: utf-8;-*-
# Maintainer: Mitch Tishmack <mitch.tishmack@gmail.com>
#
# Build/bootstrap ghc similarly to the go package.
# Caveat: bootstrapping isn't a commonly tested piece of ghc.
#
# Note: This only exists to build the native ghc. It is
# huge in size and slow and also intentionally lacks modules
# in the native compiler.
pkgname=ghc-bootstrap
pkgver=8.0.2
pkgrel=0
pkgdesc="The Glasgow haskell compiler (bootstrapped)"
arch="x86_64 armhf"
license="custom:bsd3"
url="https://haskell.org"
depends="bash libffi musl zlib gcc binutils-gold llvm3.7"
install=""
subpackages=""
makedepends=""
source="
	http://dev.alpinelinux.org/archive/ghc-bootstrap/ghc-$pkgver-armhf.tar.xz
	http://dev.alpinelinux.org/archive/ghc-bootstrap/ghc-$pkgver-x86_64.tar.xz
"

# The bootstrap process uses docker to build ghc from a debian glibc host
# then upload the bootstrap compiler to where that source url is.
#
# Ensure that docker is running prior to calling this.
#
# Note, these docker images are large, ~10G the dockerfiles weren't built
# to be small. Once built the containers should likely be removed.
snapshot() {
	for x in $(echo ${arch}); do
		docker build -t alpine-ghc-bootstrap:${x} \
			-f Dockerfile.${x} . || return 1
		docker run -a stdout alpine-ghc-bootstrap:${x} \
			/bin/cat "/tmp/ghc-${pkgver}-${x}.tar.xz" > ghc-${pkgver}-${x}.tar.xz || return 1
	done
}

package() {
	cd "$srcdir/$CARCH"
	install -d "$pkgdir" || return 1
	mv usr "$pkgdir" || return 1
	local settings="$(find $pkgdir -name settings -type f)"
	sed -i 's/C compiler supports -no-pie\"\, \"NO\"/C compiler supports -no-pie\"\, \"YES\"/' "$settings" || return 1
	sed -i 's|/usr/.*-gcc|gcc|' "$settings" || return 1
	sed -i 's|/usr/.*-ar|ar|' "$settings" || return 1
	sed -i 's|/usr/.*-ld.gold|ld.gold|' "$settings" || return 1
	sed -i 's|/usr/.*-ld|ld.gold|' "$settings" || return 1
	sed -i 's|/usr/.*/llc|llc-3.7|' "$settings" || return 1
	sed -i 's|/usr/.*/opt|opt-3.7|' "$settings" || return 1
}
