# Contributor: Orson Teodoro <orsonteodoro@hotmail.com>
# Contributor: Natanael Copa <ncopa@alpinelinux.org>
# Maintainer: Orson Teodoro <orsonteodoro@hotmail.com>
# Based on linux-vanilla and linux-pf

_gitrev="c7d59ce8f4a1d7636f4bb59320bc18c7960459e8"
_flavor=zen
pkgname=linux-${_flavor}
pkgver=4.15.0_git20180228
_pkgver=${pkgver%_git*}
case $_pkgver in
	*.*.*)	_kernver=${_pkgver%.*};;
	*.*) _kernver=$_pkgver;;
esac
pkgrel=1
pkgdesc="Zen Patched Kernel Sources"
url="http://zen-kernel.org"
depends="mkinitfs linux-firmware"
_depends_dev="perl gmp-dev elfutils-dev bash"
makedepends="$_depends_dev sed installkernel bc linux-headers openssl-dev patchutils"
options="!strip"
_config=${config:-config-$_flavor.${CARCH}}
source="https://cdn.kernel.org/pub/linux/kernel/v${_pkgver%%.*}.x/linux-$_kernver.tar.xz
	https://github.com/torvalds/linux/compare/v${_kernver}...zen-kernel:${_gitrev}.diff
	0001-HID-apple-fix-Fn-key-Magic-Keyboard-on-bluetooth.patch
	config-$_flavor.aarch64
	config-$_flavor.armhf
	config-$_flavor.x86
	config-$_flavor.x86_64
	config-$_flavor.ppc
	config-$_flavor.ppc64le
	config-$_flavor.s390x
	disable_debug
	update_disable_debug"
# Due to time constraints, I'm not including these x86: WINCHIP3D WINCHIPC6
# CRUSOE EFFICEON GEODE_LX GEODEGX1 ELAN.  Generated per subpackage because of
# GraySky2 GCC Patches. NATIVE is optimal.
__cpus_x86_64="SKYLAKE BROADWELL HASWELL IVYBRIDGE SANDYBRIDGE SILVERMONT \
	WESTMERE NEHALEM CORE2 ATOM PSC ZEN EXCAVATOR STEAMROLLER PILEDRIVER \
	BULLDOZER JAGUAR BOBCAT BARCELONA K10 K8SSE3 K8"
__cpus_x86="VIAC7 VIAC3_2 CYRIXIII K7 K6 PENTIUM4 PENTIUMM PENTIUMIII \
	PENTIUMII 686 586MMX 586TSC 586"
subpackages="$pkgname-dev:_dev:$CBUILD_ARCH"
_flavors=
if [[ "${CBUILD_ARCH}" == "x86_64" ]] ; then
	for _cpu in $__cpus_x86_64 ; do
		_cpu=$(echo "${_cpu}" | tr '[:upper:]' '[:lower:]')
		subpackages="$subpackages \
linux-${_flavor}-${_cpu}:_build_package_x86:$CBUILD_ARCH"
	done
fi
if [[ "${CBUILD_ARCH}" == "x86" ]] ; then
	for _cpu in $__cpus_x86 ; do
		_cpu=$(echo "${_cpu}" | tr '[:upper:]' '[:lower:]')
		subpackages="$subpackages \
linux-${_flavor}-${_cpu}:_build_package_x86:$CBUILD_ARCH"
	done
fi
for _i in $source; do
	case $_i in
	config-*.$CARCH)
		_f=${_i%.$CARCH}
		_f=${_f#config-}
		_flavors="$_flavors ${_f}" ;;
	esac
done
if [ "${_pkgver%.0}" = "$_pkgver" ]; then
	source="$source
	https://cdn.kernel.org/pub/linux/kernel/v${_pkgver%%.*}.x/patch-${_pkgver}.xz"
fi
arch="all"
license="GPL-2.0"
_abi_release=${_pkgver}
_carch=${CARCH}
case "$_carch" in
	aarch64*) _carch="arm64" ;;
	arm*) _carch="arm" ;;
	ppc*) _carch="powerpc" ;;
	s390*) _carch="s390" ;;
esac
HOSTCC="${CC:-gcc}"
HOSTCC="${HOSTCC#${CROSS_COMPILE}}"

prepare() {
	local _patch_failed=
	cd "$srcdir"/linux-$_kernver
	if [ "$_kernver" != "$_pkgver" ]; then
		unxz -c < "$srcdir"/patch-${_pkgver}.xz | patch -p1 -N
	fi
	# each row corresponds to logos, ureadahead, exfat, vhba
	filterdiff -x '*drivers/video/logo*' -x '*/linux/linux_logo.h' \
		-x '*fs/overlayfs/inode.c' -x '*fs/open.c' -x '*fs/exec.c' \
		-x '*fs/Kconfig' -x '*fs/Makefile' -x '*fs/exfat*' \
		-x '*scsi/vhba*' -x '*scsi/Makefile' -x '*scsi/Kconfig' \
		"$srcdir"/v${_pkgver%.*}...zen-kernel:${_gitrev}.diff > \
"$srcdir"/linux-$_kernver/v${_pkgver%.*}...zen-kernel:${_gitrev}.diff
	patch -p1 -i "$srcdir"/linux-$_kernver/\
v${_pkgver%.*}...zen-kernel:${_gitrev}.diff
	for i in $source; do
		case $i in
			*.patch) patch -p1 -N -i "$srcdir"/$i ;;
		esac
	done
	rm -f localversion*
	for i in $_flavors; do
		local _config=config-$i.${CARCH}
		local _builddir="$srcdir"/build-$i
		mkdir -p "$_builddir"
		echo "-$pkgrel-$i" > "$srcdir"/build-$i/localversion-alpine
		cp "$srcdir"/$_config "$_builddir"/.config
		make -C "$srcdir"/linux-$_kernver O="$_builddir" \
			HOSTCC="${CC:-gcc}" silentoldconfig
	done
}

_unset_option() {
	local option="$1"
	sed -i -E -e "s|[ ]*$option(=[ym0-9]+)?\$|# $option is not set|g" \
		.config
}

_replace_option() {
	local option="$1"
	local value="$2"
	sed -i -E \
		-e "s|[#]+[ ]*$option(=[ym0-9])? is not set|$option=$value|g" \
		.config
}

_verify_unset_option() {
	local option="$1"
	set +e
	grep -E -e "$option(=[ym0-9]+)?" .config
	if [[ "$?" == "0" ]] ; then
		_unset_option "$option"
	else
		echo "# $option is not set" >> .config
	fi
	set -e
}

_y_if_match() {
	local ucputype="$1"
	local option="$2"
	local microarchs="$3"
	_verify_unset_option "$option"
	case "$ucputype" in
		$microarchs) _replace_option "$option" "y" ;;
	esac
}

_num_if_match() {
	local ucputype="$1"
	local option="$2"
	local microarchs="$3"
	local num="$4"
	_verify_unset_option "$option"
	case "$ucputype" in
		$microarchs) _replace_option "$option" "$num" ;;
	esac
}

_build_x86() {
	local cputype="$1"
        local ucputype=$(echo "$cputype" | tr '[:lower:]' '[:upper:]')
	unset LDFLAGS
	local i=$_flavor
	local _UML=
	local _X86_VSMP=
	local _X86_GENERIC=1
	local _X86_CMPXCHG64=
	local _X86_P6_NOP=
	local _c
	cd "$srcdir"/build-$i
	make clean
	set +e
	grep -E -e "^CONFIG_UML" .config ;	_UML="$?"
	grep -E -e "^CONFIG_X86_VSMP" .config ;	_X86_VSMP="$?"
	set -e
	for _c in $__cpus_x86 $__cpus_x86_64; do
		_verify_unset_option "CONFIG_M${_c}"
	done
	_verify_unset_option "CONFIG_GENERIC_CPU"
	_verify_unset_option "CONFIG_X86_CMOV"
	_verify_unset_option "CONFIG_X86_INTERNODE_CACHE_SHIFT"
	_verify_unset_option "CONFIG_X86_P6_NOP"
	_verify_unset_option "CONFIG_X86_TSC"
	_verify_unset_option "CONFIG_X86_USE_3DNOW"
	_verify_unset_option "CONFIG_X86_CMPXCHG64"
	_verify_unset_option "CONFIG_X86_MINIMUM_CPU_FAMILY"
	_verify_unset_option "CONFIG_X86_DEBUGCTLMSR"
	_verify_unset_option "CONFIG_SCHED_MC_PRIO"
	_verify_unset_option "CONFIG_RQ_NONE"
	_verify_unset_option "CONFIG_RQ_SMT"
	_verify_unset_option "CONFIG_RQ_MC"
	_verify_unset_option "CONFIG_RQ_SMP"
	_verify_unset_option "CONFIG_SMT_NICE"
	_replace_option "CONFIG_M${ucputype}" "y"
	if [[ "$CBUILD_ARCH" == "X86_64" ]] ; then
		_replace_option "CONFIG_X86_CMOV" "y"
	else
		_y_if_match "$ucputype" "CONFIG_X86_CMOV" \
"K8|K8SSE3|K10|BARCELONA|BOBCAT|BULLDOZER|PILEDRIVER|STEAMROLLER|EXCAVATOR|ZEN|\
JAGUAR|K7|CORE2|NEHALEM|WESTMERE|SILVERMONT|SANDYBRIDGE|IVYBRIDGE|HASWELL|\
BROADWELL|SKYLAKE|PENTIUM4|PENTIUMM|PENTIUMIII|PENTIUMII|686|VIAC3_2|VIAC7|\
CRUSOE|EFFICEON|NATIVE|ATOM|GEODE_LX"
	fi
	if [[ -n "${_X86_VSMP}" ]] ; then
		_replace_option "CONFIG_X86_INTERNODE_CACHE_SHIFT" "12"
	else
		_num_if_match "$ucputype" "CONFIG_X86_L1_CACHE_SHIFT" \
			"PENTIUM4|PSC" "7"
		_num_if_match "$ucputype" "CONFIG_X86_L1_CACHE_SHIFT" \
"K7|K8|K8SSE3|K10|BARCELONA|BOBCAT|BULLDOZER|PILEDRIVER|STEAMROLLER|EXCAVATOR|\
ZEN|JAGUAR|PENTIUMM|CORE2|NEHALEM|WESTMERE|SILVERMONT|SANDYBRIDGE|IVYBRIDGE|\
HASWELL|BROADWELL|SKYLAKE|NATIVE|ATOM|VIAC7|X86_GENERIC|GENERIC_CPU" "6"
		_num_if_match "$ucputype" "CONFIG_X86_L1_CACHE_SHIFT" \
			"ELAN|GEODEGX1" "4"
		_num_if_match "$ucputype" "CONFIG_X86_L1_CACHE_SHIFT" \
"WINCHIP3D|WINCHIPC6|CRUSOE|EFFICEON|CYRIXIII|K6|PENTIUMIII|PENTIUMII|686|\
586MMX|586TSC|586|VIAC3_2|GEODE_LX" "5"
	fi
	case "$ucputype" in
		CORE2|PENTIUM4|PSC|ATOM|NEHALEM|WESTMERE|SILVERMONT|\
SANDYBRIDGE|IVYBRIDGE|HASWELL|BROADWELL|SKYLAKE|NATIVE)
			_replace_option "CONFIG_X86_P6_NOP" "y"
			_X86_P6_NOP=1 ;;
	esac
	if [[ "$CBUILD_ARCH" == "X86_64" ]] ; then
		_replace_option "CONFIG_X86_TSC" "y"
	else	
		_y_if_match "$ucputype" "CONFIG_X86_TSC" \
"WINCHIP3D|CRUSOE|EFFICEON|CYRIXIII|K7|K6|PENTIUM4|PENTIUMM|PENTIUMIII|\
PENTIUMII|686|586MMX|586TSC|K8|K8SSE3|VIAC3_2|VIAC7|GEODEGX1|GEODE_LX|CORE2|\
NEHALEM|WESTMERE|SILVERMONT|SANDYBRIDGE|IVYBRIDGE|HASWELL|BROADWELL|SKYLAKE|\
NATIVE|ATOM"
	fi
	_y_if_match "$ucputype" "CONFIG_X86_INTEL_USERCOPY" \
"PENTIUM4|PENTIUMM|PENTIUMIII|PENTIUMII|586MMX|X86_GENERIC|K8|K8SSE3|K7|\
EFFICEON|CORE2|K10|BARCELONA|NEHALEM|WESTMERE|SILVERMONT|SANDYBRIDGE|IVYBRIDGE|\
HASWELL|BROADWELL|SKYLAKE|NATIVE"
	_y_if_match "$ucputype" "CONFIG_X86_USE_PPRO_CHECKSUM" "WINCHIP3D|\
WINCHIPC6|CYRIXIII|K7|K6|K10|PENTIUM4|PENTIUMM|PENTIUMIII|PENTIUMII|686|K8|\
K8SSE3|VIAC3_2|VIAC7|EFFICEON|GEODE_LX|CORE2|NEHALEM|WESTMERE|SILVERMONT|\
SANDYBRIDGE|IVYBRIDGE|HASWELL|BROADWELL|SKYLAKE|ATOM|NATIVE"
	_y_if_match "$ucputype" "CONFIG_X86_PPRO_FENCE" \
		"686|586MMX|586TSC|586|GEODEGX1"
	_y_if_match "$ucputype" "CONFIG_X86_F00F_BUG" "586MMX|586TSC|586"
	_y_if_match "$ucputype" "CONFIG_X86_ALIGNMENT_16" \
"MWINCHIP3D|WINCHIPC6|CYRIXIII|ELAN|K6|586MMX|586TSC|586|VIAC3_2|GEODEGX1"
	case "$ucputype" in
		CYRIXIII|K7|GEODE_LX)
			if [[ -z "${_UML}" ]] ; then
				_replace_option "CONFIG_X86_USE_3DNOW" "y"
			fi ;;
	esac
	if [[ "$CBUILD_ARCH" == "X86_64" ]] ; then
		_replace_option "CONFIG_X86_CMOV" "y"
	else
		case "$ucputype" in
X86_PAE|CORE2|NEHALEM|WESTMERE|SILVERMONT|SANDYBRIDGE|IVYBRIDGE|HASWELL|\
BROADWELL|SKYLAKE|PENTIUM4|PENTIUMM|PENTIUMIII|PENTIUMII|686|ATOM|NATIVE)
				_replace_option "CONFIG_X86_CMPXCHG64" "y"
				_X86_CMPXCHG64=1 ;;
		esac
	fi
	if [[ "$CBUILD_ARCH" == "X86_64" ]] ; then
		_replace_option "CONFIG_X86_MINIMUM_CPU_FAMILY" "64"
	elif [[ "$CBUILD_ARCH" == "X86_32" ]] ; then
		if [[ -n "$_X86_P6_NOP" ]] ; then
			_replace_option "CONFIG_X86_MINIMUM_CPU_FAMILY" "6"
		fi
		if [[ -n "$_X86_CMPXCHG64" ]] ; then
			_replace_option "CONFIG_X86_MINIMUM_CPU_FAMILY" "5"
		fi
	else
		_replace_option "CONFIG_X86_MINIMUM_CPU_FAMILY" "4"
	fi
	case "$ucputype" in
SKYLAKE|BROADWELL|HASWELL|IVYBRIDGE|SANDYBRIDGE|SILVERMONT|WESTMERE|NEHALEM|\
CORE2|ATOM|PSC|ZEN)
# hyperthreaded Intel and AMD Zen (default for Liquorix but refined on Alpine)
			_replace_option "CONFIG_RQ_SMT" "y"
			_replace_option "CONFIG_SMT_NICE" "y" ;;
EXCAVATOR|STEAMROLLER|PILEDRIVER|BULLDOZER|JAGUAR|BOBCAT|BARCELONA|K10)
			# multicore (default for MuQSS)
			_replace_option "CONFIG_RQ_MC" "y" ;;
		*)
			# includes K8SSE3|K8
			# unicore
			_replace_option "CONFIG_RQ_NONE" "y" ;;
	esac
	make CC="${CC:-gcc}" KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-Alpine"
}

build() {
	unset LDFLAGS
	for i in $_flavors; do
		cd "$srcdir"/build-$i
		make ARCH="$_carch" CC="${CC:-gcc}" \
			KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-Alpine"
	done
}

_package() {
	local _buildflavor="$1" _outdir="$2"
	local _abi_release=${_pkgver}-${pkgrel}-${_buildflavor}
	local _install
	cd "$srcdir"/build-$_buildflavor
	mkdir -p "$_outdir"/boot "$_outdir"/lib/modules
	case "$CARCH" in
	arm*)
		local _dtbdir="$_outdir"/usr/lib/linux-${_abi_release}
		mkdir -p "$_dtbdir"
		for i in arch/arm/boot/dts/*.dtb ; do
			install -m644 "$i" "$_dtbdir"
		done
		_install=zinstall ;;
	*)
		_install=install ;;
	esac
	make -j1 modules_install $_install INSTALL_MOD_PATH="$_outdir" \
		INSTALL_PATH="$_outdir"/boot
	rm -rf "$_outdir"/lib/modules/${_abi_release}/build \
		"$_outdir"/lib/modules/${_abi_release}/source \
		"$_outdir"/lib/firmware
	install -D include/config/kernel.release \
		"$_outdir"/usr/share/kernel/$_buildflavor/kernel.release
}

package() {
	depends="$depends linux-firmware"
	_package $_flavor "$pkgdir"
}

_package_x86() {
	local cputype="$1"
	depends="$depends linux-firmware"
	_package $_flavor "$subpkgdir"
}

_build_package_x86() {
        local cputype=${subpkgname##*-}
	pkgdesc="${pkgdesc} ($cputype)"
	_build_x86 $cputype
	_package_x86 $cputype
}

_dev() {
	local _flavor=$(echo $subpkgname | sed -E 's/(^linux-|-dev$)//g')
	local _abi_release=${_pkgver}-${pkgrel}-$_flavor
	pkgdesc="Headers and script for third party modules for $_flavor kernel"
	depends="$_depends_dev"
	local dir="$subpkgdir"/usr/src/linux-headers-${_abi_release}
	mkdir -p "$dir"
	cp "$srcdir"/config-$_flavor.${CARCH} "$dir"/.config
	echo "-$pkgrel-$_flavor" > "$dir"/localversion-alpine
	make -j1 -C "$srcdir"/linux-$_kernver O="$dir" HOSTCC="${CC:-gcc}" \
		silentoldconfig prepare modules_prepare scripts
	rm "$dir"/Makefile "$dir"/source
	# copy the needed stuff from real sources
	# from ubuntu kernel build script: 
# http://kernel.ubuntu.com/git/ubuntu/ubuntu-zesty.git/tree/debian/rules.d/3-binary-indep.mk
	cd "$srcdir"/linux-$_kernver
	find .  -path './include/*' -prune \
		-o -path './scripts/*' -prune -o -type f \
		\( -name 'Makefile*' -o -name 'Kconfig*' -o -name 'Kbuild*' -o \
		   -name '*.sh' -o -name '*.pl' -o -name '*.lds' \) \
		-print | cpio -pdm "$dir"
	cp -a scripts include "$dir"
	find $(find arch -name include -type d -print) -type f \
		| cpio -pdm "$dir"
	install -Dm644 "$srcdir"/build-$_flavor/Module.symvers \
		"$dir"/Module.symvers
	mkdir -p "$subpkgdir"/lib/modules/${_abi_release}
	ln -sf /usr/src/linux-headers-${_abi_release} \
		"$subpkgdir"/lib/modules/${_abi_release}/build
}
sha512sums="c00d92659df815a53dcac7dde145b742b1f20867d380c07cb09ddb3295d6ff10f8931b21ef0b09d7156923a3957b39d74d87c883300173b2e20690d2b4ec35ea  linux-4.15.tar.xz
bc1dc43dde9d829a4ede49052e0386c22052da47d583d6868dae5078361033586098585401d32f830afc4ea60d5898ddb33fcd89c2e02192bed0a51de63829a6  v4.15...zen-kernel:c7d59ce8f4a1d7636f4bb59320bc18c7960459e8.diff
5373728be2b507c3db5e042e1d768740df7965078868afdc46418b1adc4cae3d8f9f1aedb59975a0f2acf8754340499354fcf97c503397a5d9886ccc9689b782  0001-HID-apple-fix-Fn-key-Magic-Keyboard-on-bluetooth.patch
bb0cf6d77b7f53628068be77e266ee141e940f6f2252cbeb8641f36ec61619fd99ea53b0b1eac297df7256b45bba6660ff7951b68bed35c05ac7df10ba4ff8d9  config-zen.aarch64
02c3276d1d25f666a4e38d27ceac55e5e1667738940f5b0d8ca1437b78ef1f42daac95c0d480ae32ca88a5723bcafb9a6f86bc02d6186f933bf0e4c96bc3ae03  config-zen.armhf
6d528791370dbe2226e2c6d09fa3460d515a6ed63c1e770b59174546ac89893bfe663e8bd257c2d61f667cb584ccfc8dfe7187ad98ee55bd9c6f1fa2d94ea5e6  config-zen.x86
9efd088d2e474455b75bb2ecd4016f0f38f8212b4fdfb9699f7a6e73cdb39aeb97720e3cb8d30b9304cb2acee99975d1077c6c38f59d3ec89914b0f0339af369  config-zen.x86_64
40ebff5200f22dbad8459eb08d70f4bdd4526eab1504e08fe6899bddc97c080b0075544e93917f3794f94a10e9581a5e573a7a662be8a46e8383ab62a560544f  config-zen.ppc
730916e99c0699a3b03d9b9bf3f0e783c123b8210ab22f81e0d5ac08f95c39e24ce0657cf52e06e21fe259f7b57e09a770ad3f2e2b0d6a8937a814ab33bca85c  config-zen.ppc64le
6e69cfc899181120ed2a76890fb47338d0fc2fc69b8ee7e351a886406cd1ada229e950f7a24681e1c0d70bc2cb5e46164673c80c3a46222fa7beebfe4805ab54  config-zen.s390x
440c8d7944ce0283e8acb7651b58c9267946a3a8ff0bb1f86dfc63b1568a841541470a9d77b2b18e37d19cbf748aed1308deaf17f76f28eb2b1676cc4e44429a  disable_debug
e7604870620a88be1944645862a10268c2e3e6c0f8e565855647580d812b8775c90842d6f33e50a298a316f7f26780f8719fe9f79566e53a8bdb0144145c0f14  update_disable_debug"
