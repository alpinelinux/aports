for basename() see https://bugzilla.mozilla.org/show_bug.cgi?id=1041962

diff --git a/tools/profiler/core/platform-linux-android.cpp b/tools/profiler/core/platform-linux-android.cpp
index 70b43d5..686748e 100644
--- a/tools/profiler/core/platform-linux-android.cpp
+++ b/tools/profiler/core/platform-linux-android.cpp
@@ -505,8 +505,10 @@ TickSample::PopulateContext(ucontext_t* aContext)
   MOZ_ASSERT(mIsSynchronous);
   MOZ_ASSERT(aContext);
 
+#if defined(__GLIBC__) || defined(GP_OS_android)
   if (!getcontext(aContext)) {
     FillInSample(*this, aContext);
   }
+#endif
 }
 
diff --git a/tools/profiler/lul/LulElf.cpp b/tools/profiler/lul/LulElf.cpp
index cb5bee3..2be2aa9 100644
--- a/tools/profiler/lul/LulElf.cpp
+++ b/tools/profiler/lul/LulElf.cpp
@@ -484,10 +484,10 @@ string FormatIdentifier(unsigned char identifier[16]) {
 // Return the non-directory portion of FILENAME: the portion after the
 // last slash, or the whole filename if there are no slashes.
 string BaseFileName(const string &filename) {
-  // Lots of copies!  basename's behavior is less than ideal.
-  char *c_filename = strdup(filename.c_str());
-  string base = basename(c_filename);
-  free(c_filename);
+  // basename's behavior is less than ideal so avoid it
+  const char *c_filename = filename.c_str();
+  const char *p = strrchr(c_filename, '/');
+  string base = p ? p+1 : c_filename;
   return base;
 }
 
