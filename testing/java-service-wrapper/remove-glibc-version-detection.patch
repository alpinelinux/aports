Removes the glibc version detection as well as the workaround for
certain glibc versions where 'ftell' is known to leak memory.
Obviously not needed for musl ...

Index: a/src/c/logger.c
===================================================================
--- a/src/c/logger.c	(revision 1987)
+++ b/src/c/logger.c	(working copy)
@@ -79,7 +79,10 @@
   #include <errno.h>
  #else /* LINUX */
   #include <asm/errno.h>
-  #include <gnu/libc-version.h>
+  #include <features.h>
+  #ifdef __GNU_LIBRARY__
+   #include <gnu/libc-version.h>
+  #endif
  #endif
 
 #endif
@@ -3840,6 +3843,7 @@
     return result != -1 ? result : (result = (_tcsicmp(getDistro(), fedoraPattern) == 0));
 }
 
+#ifdef __GNU_LIBRARY__
 /**
  * Check if the glibc version of the user is upper to given numbers.
  */
@@ -3855,6 +3859,7 @@
     return ((vmaj == maj && vmin == min &&  vrev >= rev) || (vmaj == maj && vmin > min) || vmaj > maj);
 }
 #endif
+#endif
 
 /**
  * Check if the system is Centos with glibc < 2.21 as there is a memory leak issue under these conditions.
@@ -3861,7 +3866,7 @@
  */
 int doesFtellCauseMemoryLeak() {
     static int result = -1;
-#ifdef LINUX
+#if defined LINUX && defined __GNU_LIBRARY__
     if (result == -1) {
         if ((isCentos() || isAMI() || isRHEL() || isFedora()) && !wrapperAssertGlibcUserBis(2, 21, 0)){
             result = 1;
