From af7810b0389c9a36ed2b28b7ff2facd4e522d662 Mon Sep 17 00:00:00 2001
From: Tomek Mrugalski <tomasz@isc.org>
Date: Thu, 15 Aug 2019 17:48:18 +0200
Subject: [PATCH 1/4] [#625,!485] Explicit log4cplus initialization by @tcely

  Imported from commit apline linux PR#8011:
  https://github.com/alpinelinux/aports/pull/8011
---
 src/lib/log/logger_manager.cc | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/lib/log/logger_manager.cc b/src/lib/log/logger_manager.cc
index 5d34b0915f..23db9faf16 100644
--- a/src/lib/log/logger_manager.cc
+++ b/src/lib/log/logger_manager.cc
@@ -24,10 +24,14 @@
 #include <log/message_types.h>
 #include <log/interprocess/interprocess_sync_null.h>
 
+#include <log4cplus/initializer.h>
+
 using namespace std;
 
 namespace {
 
+log4cplus::Initializer initializer;
+
 // Logger used for logging messages within the logging code itself.
 isc::log::Logger logger("log");
 
-- 
2.21.0


From 374315bc3dbed083fce4d9be1acdaaf5fb7cdb59 Mon Sep 17 00:00:00 2001
From: Tomek Mrugalski <tomasz@isc.org>
Date: Thu, 15 Aug 2019 18:50:57 +0200
Subject: [PATCH 2/4] [#625,!485] Conditional explicit initialization done.

---
 configure.ac                  |  9 +++++++++
 src/lib/log/logger_manager.cc | 13 ++++++++++---
 2 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/configure.ac b/configure.ac
index 9b78585611..0a15f6c48f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1030,6 +1030,15 @@ AC_MSG_RESULT([$LOG4CPLUS_VERSION])
 CPPFLAGS=$CPPFLAGS_SAVED
 LIBS=$LIBS_SAVED
 
+AC_MSG_CHECKING([log4cplus explicit initialization (log4cplus/initializer.h)])
+AC_LINK_IFELSE(
+        [AC_LANG_PROGRAM([#include <log4cplus/initializer.h>],
+                         [log4cplus::Initializer initializer;]
+                         )],
+        [AC_MSG_RESULT([yes])
+         AC_DEFINE(LOG4CPLUS_INITIALIZER_H, [1], [Explicit initialization of log4cplus possible])],
+        [AC_MSG_RESULT(no)])
+
 #
 # Configure Boost header path
 #
diff --git a/src/lib/log/logger_manager.cc b/src/lib/log/logger_manager.cc
index 23db9faf16..617acc7f88 100644
--- a/src/lib/log/logger_manager.cc
+++ b/src/lib/log/logger_manager.cc
@@ -24,13 +24,20 @@
 #include <log/message_types.h>
 #include <log/interprocess/interprocess_sync_null.h>
 
-#include <log4cplus/initializer.h>
-
 using namespace std;
 
+// Older log4cplus versions (1.2.0) don't have the initializer.h header that
+// would allow explicit initialization. Newer versions (2.0.4 for sure, possibly
+// older as well) have it and it's recommended to use it. We detect whether
+// it's present or not and do explicit initalization if possible.
+#ifdef LOG4CPLUS_INITIALIZER_H
+#include <log4cplus/initializer.h>
 namespace {
-
 log4cplus::Initializer initializer;
+}
+#endif
+
+namespace {
 
 // Logger used for logging messages within the logging code itself.
 isc::log::Logger logger("log");
-- 
2.21.0


From 845d7d9a1ea5129f29fdeebb3520fe4d47a60fde Mon Sep 17 00:00:00 2001
From: Tomek Mrugalski <tomasz@isc.org>
Date: Thu, 15 Aug 2019 20:41:24 +0200
Subject: [PATCH 3/4] [#625,!485] Fixed conditional intialization detection for
 log4cplus

---
 configure.ac | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/configure.ac b/configure.ac
index 0a15f6c48f..aff9787ab7 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1030,6 +1030,12 @@ AC_MSG_RESULT([$LOG4CPLUS_VERSION])
 CPPFLAGS=$CPPFLAGS_SAVED
 LIBS=$LIBS_SAVED
 
+# Older log4cplus versions (1.2.0) don't have the initializer.h header that
+# would allow explicit initialization. Newer versions (2.0.4 for sure, possibly
+# older as well) have it and it's recommended to use it. We detect whether
+# it's present or not and do explicit initalization if possible.
+LIBS_SAVED="$LIBS"
+LIBS="$LOG4CPLUS_LIBS $LIBS"
 AC_MSG_CHECKING([log4cplus explicit initialization (log4cplus/initializer.h)])
 AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([#include <log4cplus/initializer.h>],
@@ -1038,6 +1044,7 @@ AC_LINK_IFELSE(
         [AC_MSG_RESULT([yes])
          AC_DEFINE(LOG4CPLUS_INITIALIZER_H, [1], [Explicit initialization of log4cplus possible])],
         [AC_MSG_RESULT(no)])
+LIBS="$LIBS_SAVED"
 
 #
 # Configure Boost header path
-- 
2.21.0


From 8badbd89b7193ea065f153e0edb44fa5be34df23 Mon Sep 17 00:00:00 2001
From: Tomek Mrugalski <tomasz@isc.org>
Date: Thu, 15 Aug 2019 21:36:15 +0200
Subject: [PATCH 4/4] [#625,!485] Fixed detection of log4plus in non-standard
 location

---
 configure.ac | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/configure.ac b/configure.ac
index aff9787ab7..8a7f05ae27 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1034,6 +1034,8 @@ LIBS=$LIBS_SAVED
 # would allow explicit initialization. Newer versions (2.0.4 for sure, possibly
 # older as well) have it and it's recommended to use it. We detect whether
 # it's present or not and do explicit initalization if possible.
+CPPFLAGS_SAVED=$CPPFLAGS
+CPPFLAGS="$LOG4CPLUS_INCLUDES $CPPFLAGS"
 LIBS_SAVED="$LIBS"
 LIBS="$LOG4CPLUS_LIBS $LIBS"
 AC_MSG_CHECKING([log4cplus explicit initialization (log4cplus/initializer.h)])
@@ -1045,6 +1047,7 @@ AC_LINK_IFELSE(
          AC_DEFINE(LOG4CPLUS_INITIALIZER_H, [1], [Explicit initialization of log4cplus possible])],
         [AC_MSG_RESULT(no)])
 LIBS="$LIBS_SAVED"
+CPPFLAGS=$CPPFLAGS_SAVED
 
 #
 # Configure Boost header path
-- 
2.21.0

