--- a/tools/settings_template_readonly.py
+++ b/tools/settings_template_readonly.py
@@ -1,35 +1,35 @@
-# This file will be edited (the {{{ }}} things), and then ~/.emscripten created with the result, if ~/.emscripten doesn't exist.
-
 # Note: If you put paths relative to the home directory, do not forget os.path.expanduser
 
-# Note: On Windows, remember to escape backslashes! I.e. EMSCRIPTEN_ROOT='c:\emscripten\' is not valid, but EMSCRIPTEN_ROOT='c:\\emscripten\\' and EMSCRIPTEN_ROOT='c:/emscripten/' are.
-
 import os
 
 # this helps projects using emscripten find it
-EMSCRIPTEN_ROOT = os.path.expanduser(os.getenv('EMSCRIPTEN') or '{{{ EMSCRIPTEN_ROOT }}}') # directory
-LLVM_ROOT = os.path.expanduser(os.getenv('LLVM') or '{{{ LLVM_ROOT }}}') # directory
-BINARYEN_ROOT = os.path.expanduser(os.getenv('BINARYEN') or '{{{ BINARYEN_ROOT }}}') # directory
+EMSCRIPTEN_ROOT = os.path.expanduser(os.getenv('EMSCRIPTEN') or '/usr/share/emscripten') # directory
+LLVM_ROOT = os.path.expanduser(os.getenv('LLVM') or '/usr/lib/emscripten-fastcomp/bin') # directory
+
+if os.getenv('BINARYEN'):
+    BINARYEN_ROOT = os.path.expanduser(os.getenv('BINARYEN')) # directory
+else:
+    BINARYEN_ROOT = '/usr'
+    BINARYEN_WASM_JS = '/usr/share/binaryen/wasm.js'
 
 # If not specified, defaults to sys.executable.
-#PYTHON = 'python'
+PYTHON = 'python2'
 
-# Add this if you have manually built the JS optimizer executable (in Emscripten/tools/optimizer) and want to run it from a custom location.
 # Alternatively, you can set this as the environment variable EMSCRIPTEN_NATIVE_OPTIMIZER.
-# EMSCRIPTEN_NATIVE_OPTIMIZER='/path/to/custom/optimizer(.exe)'
+EMSCRIPTEN_NATIVE_OPTIMIZER='/usr/bin/emoptimizer'
 
 # See below for notes on which JS engine(s) you need
-NODE_JS = os.path.expanduser(os.getenv('NODE') or '{{{ NODE }}}') # executable
+NODE_JS = os.path.expanduser(os.getenv('NODE') or '/usr/bin/node') # executable
 SPIDERMONKEY_ENGINE = [os.path.expanduser(os.getenv('SPIDERMONKEY') or 'js')] # executable
 V8_ENGINE = os.path.expanduser(os.getenv('V8') or 'd8') # executable
 
 JAVA = 'java' # executable
 
-TEMP_DIR = '{{{ TEMP }}}'
+TEMP_DIR = '/tmp'
 
 CRUNCH = os.path.expanduser(os.getenv('CRUNCH') or 'crunch') # executable
 
-#CLOSURE_COMPILER = '..' # define this to not use the bundled version
+CLOSURE_COMPILER = '/usr/share/java/closure-compiler.jar'
 
 ########################################################################################################
 
