diff --git a/src/lib/multipageloader.cc b/src/lib/multipageloader.cc
index 179ff86..ee6d9ac 100644
--- a/src/lib/multipageloader.cc
+++ b/src/lib/multipageloader.cc
@@ -44,7 +44,7 @@ namespace wkhtmltopdf {
 
 LoaderObject::LoaderObject(QWebPage & p): page(p), skip(false) {};
 
-MyNetworkAccessManager::MyNetworkAccessManager(const settings::LoadPage & s): 
+MyNetworkAccessManager::MyNetworkAccessManager(const settings::LoadPage & s):
 	disposed(false),
 	settings(s) {
 
@@ -216,7 +216,8 @@ ResourceObject::ResourceObject(MultiPageLoaderPrivate & mpl, const QUrl & u, con
 
 	double devicePixelRatio = multiPageLoader.dpi / 96.; // The used version of WebKit always renders at 96 DPI when no zoom is applied. It does not fully support a device pixel ratio != 1 natively.
 	webPage.mainFrame()->setZoomFactor(devicePixelRatio * settings.zoomFactor); // Zoom in the page to achieve a higher DPI.
-	webPage.setDevicePixelRatio(devicePixelRatio); // Fix CSS media queries (does not affect anything else).
+	// TODO this needs to be safely checked
+	//webPage.setDevicePixelRatio(devicePixelRatio); // Fix CSS media queries (does not affect anything else).
 }
 
 /*!
@@ -375,7 +376,7 @@ void ResourceObject::amfinished(QNetworkReply * reply) {
 		if (settings.mediaLoadErrorHandling == settings::LoadPage::abort)
 		{
 			httpErrorCode = networkStatus > 0 ? (networkStatus + 1000) : httpStatus;
-			error(QString("Failed to load ") + reply->url().toString() + ", with code: " + QString::number(httpErrorCode) + 
+			error(QString("Failed to load ") + reply->url().toString() + ", with code: " + QString::number(httpErrorCode) +
 				" (sometimes it will work just to ignore this error with --load-media-error-handling ignore)");
 		}
 		else {
