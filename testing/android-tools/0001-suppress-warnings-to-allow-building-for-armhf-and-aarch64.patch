diff --git a/vendor/boringssl/crypto/cipher_extra/aead_test.cc b/vendor/boringssl/crypto/cipher_extra/aead_test.cc
index a40d673..e71a392 100644
--- a/vendor/boringssl/crypto/cipher_extra/aead_test.cc
+++ b/vendor/boringssl/crypto/cipher_extra/aead_test.cc
@@ -28,6 +28,8 @@
 #include "../test/file_test.h"
 #include "../test/test_util.h"
 
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wattributes"
 
 struct KnownAEAD {
   const char name[40];
@@ -651,3 +653,5 @@ TEST(AEADTest, AESGCMEmptyNonce) {
   EXPECT_EQ(ERR_LIB_CIPHER, ERR_GET_LIB(err));
   EXPECT_EQ(CIPHER_R_INVALID_NONCE_SIZE, ERR_GET_REASON(err));
 }
+
+#pragma GCC diagnostic pop
diff --git a/vendor/boringssl/crypto/poly1305/poly1305_test.cc b/vendor/boringssl/crypto/poly1305/poly1305_test.cc
index 198cca1..c78bf9f 100644
--- a/vendor/boringssl/crypto/poly1305/poly1305_test.cc
+++ b/vendor/boringssl/crypto/poly1305/poly1305_test.cc
@@ -25,6 +25,8 @@
 #include "../test/file_test.h"
 #include "../test/test_util.h"
 
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wattributes"
 
 static void TestSIMD(unsigned excess, const std::vector<uint8_t> &key,
                      const std::vector<uint8_t> &in,
@@ -102,3 +104,5 @@ TEST(Poly1305Test, TestVectors) {
     TestSIMD(48, key, in, mac);
   });
 }
+
+#pragma GCC diagnostic pop
