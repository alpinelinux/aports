From ba1b8a60672a29a82f2e5df79f05c94d088552c1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20G=C3=B3rny?= <mgorny@gentoo.org>
Date: Mon, 19 Dec 2016 09:54:10 +0100
Subject: [PATCH] clang_delta: Namespace-qualify clang::StringLiteral

Use clang::StringLiteral rather than relying on the using statement
since llvm::StringLiteral was introduced lately and made plain
'StringLiteral' ambiguous.

Upstream-Commit: https://github.com/csmith-project/creduce/commit/ba1b8a60672a29a82f2e5df79f05c94d088552c1
---
 clang_delta/ExpressionDetector.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/clang_delta/ExpressionDetector.cpp b/clang_delta/ExpressionDetector.cpp
index f84153d..be519eb 100644
--- a/clang_delta/ExpressionDetector.cpp
+++ b/clang_delta/ExpressionDetector.cpp
@@ -452,8 +452,8 @@ bool ExpressionDetector::isIdenticalExpr(const Expr *E1, const Expr *E2)
   }
 
   case Stmt::StringLiteralClass: {
-    const StringLiteral *Lit1 = cast<StringLiteral>(E1);
-    const StringLiteral *Lit2 = cast<StringLiteral>(E2);
+    const clang::StringLiteral *Lit1 = cast<clang::StringLiteral>(E1);
+    const clang::StringLiteral *Lit2 = cast<clang::StringLiteral>(E2);
     return Lit1->getBytes() == Lit2->getBytes();
   }
 
