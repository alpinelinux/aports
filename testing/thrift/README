As soon as musl-1.1.20 is released, the thrift family of packages (and sub-packages) is
ready to go for version 0.11.0-r0.

The main reason for the delay is the inclusion of getaddrinfo(3) / AI_ADDRCONFIG, which I
and Rich Felker developed collaboratively.

Available (Sub)Packages
=======================

thrift         (the compiler)
libthrift      (C++ bindings)
libthrift-dev  (C++ bindings - development files)
libthriftc     (c_glib bindings)
libthriftc-dev (c_glib bindings - development files)
lua-thrift     (Lua bindings)
perl-thrift    (Perl bindings)
node-thrift    (Nodejs bindings, although users might as well just use "npm install thrift")

On the Near Horizon
===================

The following should take relatively little work to add, I just haven't gotten there yet.

rust-thrift    (Rust bindings)
ruby-thrift    (Ruby bindings)

What has some issues
====================

---------------------------------
py-thrift      (Python2 bindings)

Most of everything is working for Python. However TForkingServer seems to die when trying
to use SO_REUSEADDR. Apparently this sort of thing has happened in the past with Python.
It works with glibc and apple's libc, so it's relatively easy to assume it's musl related.

TSocket.py
181:        self.handle.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
182:        if hasattr(self.handle, 'settimeout'):
183:            self.handle.settimeout(None)
184:        self.handle.bind(res[4])
185:        self.handle.listen(128)

I haven't found the root cause yet (e.g. I had to track down a few issues to musl already)

$ /usr/bin/python /home/alpine/thrift/src/thrift-0.11.0/test/py/Te
stServer.py --protocol=accel --port=9090 TForkingServer
Traceback (most recent call last):
  File "/home/alpine/thrift/src/thrift-0.11.0/test/py/TestServer.py", line 316, in <module>
    sys.exit(main(options))
  File "/home/alpine/thrift/src/thrift-0.11.0/test/py/TestServer.py", line 268, in main
    server.serve()
  File "/home/alpine/thrift/src/thrift-0.11.0/lib/py/build/lib.linux-x86_64-2.7/thrift/server/TServer.py", line 219, in serve
    self.serverTransport.listen()
  File "/home/alpine/thrift/src/thrift-0.11.0/lib/py/build/lib.linux-x86_64-2.7/thrift/transport/TSocket.py", line 185, in listen
    self.handle.bind(res[4])
  File "/usr/lib/python2.7/socket.py", line 228, in meth
    return getattr(self._sock,name)(*args)
socket.error: [Errno 98] Address in use

----------------------------
go-thrift      (Go bindings)

Fails due to this:

https://github.com/golang/go/issues/14481

Undefined reference to __libc_malloc and __libc_free. Fix is trivial - either define those
symbols in musl or create aliases in Go. I'm leaning towards the latter

-------------------------------------
mono-thrift      (Mono / C# bindings)

I believe mono is scheduled to be released in Alpine in version >= 3.9. Mono is currently in 'edge'.

--------------------------------
java-thrift      (Java bindings)

Fails due to a build issue with maven. Maven tries to install into /root/.m2 inside of
fakeroot. The result is that it fails.

It might be possible to fix this trivially, because all of the unit tests pass fine.
