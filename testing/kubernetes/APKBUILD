# Contributor: Francesco Colista <fcolista@alpinelinux.org>
# Contributor: Mateusz Miku≈Ça <matti@marinelayer.io>
# Contributor: Tiago Ilieve <tiago.myhro@gmail.com>
# Maintainer: Francesco Colista <fcolista@alpinelinux.org>
pkgname=kubernetes
pkgver=1.15.3
pkgrel=2
pkgdesc="Container Cluster Manager for Docker"
url="https://kubernetes.io/"
#arch="x86_64 armhf"
arch=""
license="Apache-2.0"
options="!check" # Tests hang
depends="bash"
makedepends="coreutils findutils go go-bindata linux-headers rsync grep"
subpackages="$pkgname-kubeadm:_kubeadm"
source="$pkgname-$pkgver.tar.gz::https://github.com/kubernetes/kubernetes/archive/v$pkgver.tar.gz
	ensure-cgo-usage.patch
	make-e2e_node-run-over-distro-bins.patch
	make-test-cmd-run-over-hyperkube-based-kubectl.patch
	bindata.patch

	kube-apiserver.initd
	kube-apiserver.confd
	kube-apiserver.logrotated

	kube-controller-manager.initd
	kube-controller-manager.confd
	kube-controller-manager.logrotated

	kube-proxy.initd
	kube-proxy.confd
	kube-proxy.logrotated

	kube-scheduler.initd
	kube-scheduler.confd
	kube-scheduler.logrotated

	kubelet.initd
	kubelet.confd
	kubelet.logrotated 
	"

build() {
	make -j1
}

package() {
	local binaries="hyperkube
			kube-apiserver
			kube-controller-manager
			cloud-controller-manager
			kube-scheduler
			kubeadm
			kubectl
			kubelet
			kube-proxy"

	for bin in $binaries; do
		mkdir -p "$pkgdir"/var/log/$bin
		case "$CARCH" in
			arm*) install -Dm755 _output/local/bin/linux/arm/$bin "$pkgdir"/usr/bin/$bin ;;
			x86_64) install -Dm755 _output/local/bin/linux/amd64/$bin "$pkgdir"/usr/bin/$bin ;;
		esac
	done

	install -d $pkgdir/var/lib/kubelet

	local i; for i in $source; do
		case $i in
		*.initd) install -Dm755 "$srcdir/$i" \
				"$pkgdir/etc/init.d/${i%.*}" ;;
		*.confd) install -Dm644 "$srcdir/$i" \
				"$pkgdir/etc/conf.d/${i%.*}" ;;
		*.logrotate) install -Dm644 "$srcdir/$i" \
				"$pkgdir/etc/logrotate.d/${i%.*}" ;;
		esac
	done
}

_kubeadm() {
	pkgdesc="Kubernetes - kubeadm"
	depends="iproute2 socat ethtool"
	mkdir -p "$subpkgdir"/usr/bin
	mv "$pkgdir"/usr/bin/kubeadm "$subpkgdir"/usr/bin
}

cleanup_srcdir() {
	go clean -modcache
	default_cleanup_srcdir
}

sha512sums="b4c3f65f7ae6c9b3e1bb8efd5182a0c922e372c0b8db77b71cd52025c7a00f592ad450c042d78b1d54b716c328c0b291296b36c102579a416b9cd8dda1be8ad2  kubernetes-1.15.3.tar.gz
bfe072d2f53543b8d704319755f3cfe5ed2467b54879e22117a25a9d7d6d4d238356e45824deaf4d18b8e9eb6f34d1de43be4840b9906f7909478ffe9e8a65ff  ensure-cgo-usage.patch
8faa8f1c777740ed33ac4e46e8e47e9092098b6e672cf57a10caab2212b9b5c6965361fe7107d1311227e6145e2ad312982dc0340feb36b03ebb04e1202366f0  make-e2e_node-run-over-distro-bins.patch
d2d50f869160c266ec677be58f0401fb6446129de3e194b4c8599a6a8000d42290de553ee07b488fcdda80ffe94c640e0846ffbd7fbca94c5684d5f373e4c9f3  make-test-cmd-run-over-hyperkube-based-kubectl.patch
13f90690564664cc1d7ca26ed3f62fea42b84050f8fd2432ff16fce21d42c7a2e9935739ab4dcb01b5289879522ecdd2d00bfe01337c3836766ce430f513245f  bindata.patch
8f4c98fe007ead2528f8efdb1117a752230d1c4039bc91fad5caf2919aa19f3fbe866c0b96b801cf4ed43d949e79da907003666fa447e4eda9b71e7d818c5315  kube-apiserver.initd
302b2a7ec715967c0aa7d1c177d4e55b26e37ebba8d04dd37ecf627d20042fe91cd7e6192ff9d71422129b0ea54a9eec6046f505af550548bd450998924f37ee  kube-apiserver.confd
1a4bcd54dafaedc614e34bbadc2a1163f003b5925d47552fb2c47049c033c147e612171e263d9659d189fc2d95688a0b7153322d8dba97c083c079fdef6c400e  kube-apiserver.logrotated
7e3baab9b034e7048ed3cda8d09444c76369874cecc0a747fb5484c482fef464adb5ccc25fcb4481fb4aff68415a60462f6cbee2138810316f0cf822637676c1  kube-controller-manager.initd
347dcf514abec4bc94036955d0fb2d32f141a39d1a70d7fb37e7bf8eb5792e5c29560d500a08aafcd3e19422d04466004b832bca7108eb2815610feb144688fe  kube-controller-manager.confd
e00cd9297d8ac75fcd504a2bfb80d5c5e145e7d475dd15edf9361dc28721afdc069c5b6e79438b75a774e972028841a17e8f7842dcfb3d7835c436a3e503704c  kube-controller-manager.logrotated
24b8f8990b54d92ad03e2b9a0605260df5462d2565213171e0f1044516f2b5cbbb2d893cd6697c472cf7018723852927c62f4514d08ad844586bce5bab0b45cd  kube-proxy.initd
4c8c34ae8668bcfa5167c2d2af006fc46b461a5dafb3ec5b64cb8cdf2a830c22ddb5cf806c93b1404f60dabf91b4153724947fa2d2c494376f20e637eeed5018  kube-proxy.confd
d7e022ee22da191bda7382f87cb293d9c9d115a3df0c2054bf918279eb866f99c6d5c21e4c98eae84bacf925f7793bbe3087e0bcf6732ccb33844d15e4386fb5  kube-proxy.logrotated
151ea6f5cc36de9b83f0e5365579e33eea8002f9a03f5f61d195a349236e6baf192f701d3fb591b769aa90e8e1e620d525b20c95a1e8cda58d062971d8f587a3  kube-scheduler.initd
af88b382ab75657d0ff13c3f8f6d924cef9f2df7807a9a27daa63495981801bc4b607998f65c0758c11a7e070e43c24f7184ba7720711109c74b1c4d57919e34  kube-scheduler.confd
3692da349dd6ed0f5acc09d7b95ac562ffecb103e2270bebdfe4a7808d48dada9d2debff262d85b11c47f9ca3f0c20000712d03629ed813ff08a3e02d69267e6  kube-scheduler.logrotated
6f8268eb8626d2e5d884e8a714861abebc92f1e7ebc9d50ab6d122fdec4e88aa672a3df900c3ce1deac36ba9991c914d7564adc0ef0e965b5975a86d51874962  kubelet.initd
3aba3d7175b58b9175e508d50fce93619a8e0205a828f677fd987d449ecb50b2805febc2ba429cb176de30eee3d49892e10a72946100e1219e090fd0397712d2  kubelet.confd
dda5fb57b55926fd2e9cebe6c1593da699afba0398c58dfa8b923c53a9ae6e63d765778577211460047f20863a6095e8e2ab3e7769e38c4f6a1c55c0e3485501  kubelet.logrotated"
