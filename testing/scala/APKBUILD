# Contributor: norbjd
# Maintainer:
pkgname=scala
pkgver=2.12.2
pkgrel=0
pkgdesc="Scala 2.12.2"
url="http://scala-lang.org"
arch="all"
license="BSD3"

# bash          : needed for scripts (e.g. scala)
# openjdk8-jre  : needed for execution 
depends="bash openjdk8-jre"

# openjdk8      : needed for sbt + compilation
# sbt           : needed for compilation
# graphviz      : needed for diagrams generation in scaladoc
makedepends="openjdk8 sbt graphviz"

# documentation is separated
subpackages="${pkgname}-doc"

source="${pkgname}-${pkgver}.tar.gz::https://github.com/scala/scala/archive/v2.12.2.tar.gz"
builddir="${srcdir}/${pkgname}-${pkgver}"

# important directories
_scala_home="/usr/share/${pkgname}-${pkgver}"
_scala_docs_home="/usr/share/doc/${pkgname}-${pkgver}"
_scala_man_home="/usr/share/man/man1"
_bin_home="/usr/bin"

# sbt command with JVM options (memory)
_sbt() {
        sbt -Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G "$@"
}

build() {
        cd "$builddir"

        # use sbt to compile, package, and create doc
	_sbt ';dist/mkPack;doc;compile:managedResources;packageDoc' || return 1
}

check() {
        cd "$builddir"

        # check if all scripts have been created and work
	./build/pack/bin/scala -version
	./build/pack/bin/scalac -version
	./build/pack/bin/scaladoc -version
	./build/pack/bin/scalap -version
	./build/pack/bin/fsc -version
}

package() {
        cd "$builddir"

        # copy scripts
	mkdir -p "$pkgdir"/"$_scala_home" || return 1
	cp -R build/pack/* "$pkgdir"/"$_scala_home"/ || return 1

        # remove useless specific Windows scripts
	rm "$pkgdir"/"$_scala_home"/bin/*.bat || return 1

        # create symbolic links
	mkdir -p "$pkgdir"/"$_bin_home" || return 1
	for _bin in `ls "$pkgdir"/"$_scala_home"/bin/`
	do
		ln -sf "$_scala_home"/bin/"$_bin" "$pkgdir"/"$_bin_home"/"$_bin" || return 1
	done
}

doc() {
	cd "$builddir"

    	default_doc || return 1

    	mkdir -p "$subpkgdir"/"$_scala_docs_home"
    	mkdir -p "$subpkgdir"/"$_scala_docs_home"/api
    	mkdir -p "$subpkgdir"/"$_scala_docs_home"/api/jars
    	mkdir -p "$subpkgdir"/"$_scala_docs_home"/tools
    	mkdir -p "$subpkgdir"/"$_scala_man_home"

        # copy default doc resources (licenses, README)
  	cp -R "$builddir"/doc/* "$subpkgdir"/"$_scala_docs_home"/ || return 1

        # copy HTML scaladoc for default API
        cp -R "$builddir"/build/scaladoc/compiler       "$subpkgdir"/"$_scala_docs_home"/api/compiler || return 1
        cp -R "$builddir"/build/scaladoc/library        "$subpkgdir"/"$_scala_docs_home"/api/library || return 1
        cp -R "$builddir"/build/scaladoc/reflect        "$subpkgdir"/"$_scala_docs_home"/api/reflect || return 1
        cp -R "$builddir"/build/scaladoc/scalap         "$subpkgdir"/"$_scala_docs_home"/api/scalap || return 1

        # copy HTML doc for tools (scripts)
        cp -R "$builddir"/src/manual/scala/tools/docutil/resources/* "$subpkgdir"/"$_scala_docs_home"/tools/ || return 1
    	cp "$builddir"/target/scala-dist/resource_managed/main/doc/tools/* "$subpkgdir"/"$_scala_docs_home"/tools/ || return 1

        # copy manpages for scripts
	for _manfile in `find "$builddir"/target/scala-dist/resource_managed/main/man/man1/ -type f`
	do
		gzip "$_manfile"
		cp "$_manfile".gz "$subpkgdir"/$_scala_man_home/ || return 1
	done

        # copy javadoc JARs
	for _javadoc_jar in `find "$builddir"/target/ -type f -name '*-javadoc.jar'`
	do
		cp "$_javadoc_jar" "$subpkgdir"/$_scala_docs_home/api/jars/ || return 1
	done
}

sha512sums="ab450e94fa79a9a0af238567b17537b12f23627eb066b84cd996a88422ec34ee8d26e09eca0416d49daccadaeb016ad6419d8022d471065389a26b024f2049b1  scala-2.12.2.tar.gz"
