# Contributor: Holger Jaekel <holger.jaekel@gmx.de>
# Maintainer: Holger Jaekel <holger.jaekel@gmx.de>
pkgname=openjdk11
_majorver=11
_minorver=0
_securityver=2
_updatever=9
pkgver=${_majorver}.${_minorver}.${_securityver}.u${_updatever}
_hg_tag=jdk-${_majorver}.${_minorver}.${_securityver}+${_updatever}
pkgrel=0
pkgdesc="OpenJDK Java ${_majorver} environment"
url="http://openjdk.java.net/"
arch="all"
license="GPLv2+CE"
depends="$pkgname-headless"
depends_dev=""
makedepends="
	$depends_dev
	alsa-lib-dev
	autoconf
	bash
	cups-dev
	fontconfig-dev
	giflib-dev
	graphviz
	grep
	lcms2-dev
	libexecinfo-dev
	libjpeg-turbo-dev
	libpng-dev
	libx11-dev
	libxext-dev
	libxrender-dev
	libxt-dev
	libxtst-dev
	linux-headers
	openjdk10-dev
	unzip
	zip
	zlib-dev
	"

case $CARCH in
x86)	_jarch=i386;;
x86_64)	_jarch=amd64;;
arm*)	_jarch=aarch32;;
*)	_jarch="$CARCH";;
esac

_java_home="/usr/lib/jvm/java-${_majorver}-openjdk"
_jrelib="$_java_home/jre/lib/$_jarch"

install=""
subpackages="
	$pkgname-jmods
	$pkgname-headless
	$pkgname-dev
	$pkgname-examples:examples:noarch
	$pkgname-doc
	$pkgname-src:src:noarch
	"
source="
	http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/archive/${_hg_tag}.tar.bz2
	10-portola-initial-musl-support.patch
	20-portola-use-jdk-portola-as-jib-product-name.patch
	30-portola-fix-jtreg-test-Basic.patch
	40-portola-fix-jtreg-test-InfoTest.patch
	50-portola-provide-default-java-stacksize-as-argument-to-pthread_create.patch
	60-portola-merge-JvmFlags.patch
	70-portola-exclude-nativeLibraryTest.java-on-musl.patch
	80-portola-fix-uninitialized-variable-build-errors.patch
	TestCryptoLevel.java
	TestECDSA.java
	"
builddir="$srcdir/jdk${_majorver}u-${_hg_tag}"
_jdkrelease="$builddir/build/linux-${CARCH}-normal-server-release/images/jdk"
_docsrelease="$builddir/build/linux-${CARCH}-normal-server-release/images/docs"

build() {
	cd "$builddir"
	NUM_PROC_OPT=''
	MAKEFLAG_J=$(echo ${MAKEFLAGS} | sed -En 's/.*-j([0-9]+).*/\1/p')
	if [ -n "${MAKEFLAG_J}" ]; then
		# http://hg.openjdk.java.net/jdk10/jdk10/file/85e6cb013b98/make/InitSupport.gmk#l105
		echo "Removing '-j${MAKEFLAG_J}' from MAKEFLAGS to prevent build fail. Passing it directly to ./configure."
		export MAKEFLAGS=${MAKEFLAGS/-j${MAKEFLAG_J}/}
		NUM_PROC_OPT="--with-num-cores=${MAKEFLAG_J}"
	fi

	# CFLAGS, CXXFLAGS and LDFLAGS are ignored as shown by a warning
	# in the output of ./configure unless used like such:
	#  --with-extra-cflags="${CFLAGS}"
	#  --with-extra-cxxflags="${CXXFLAGS}"
	#  --with-extra-ldflags="${LDFLAGS}"
	# See also paragraph "Configure Control Variables from "jdk${_majorver}-${_hg_tag}/common/doc/building.md
	_CFLAGS="$CFLAGS"
	_CXXFLAGS="$CXXFLAGS"
	_LDFLAGS="$LDFLAGS"
	unset CFLAGS
	unset CXXFLAGS
	unset LDFLAGS
	unset MAKEFLAGS

	bash configure \
		--with-version-build="${_updatever}" \
		--with-version-pre="" \
		--with-version-opt="" \
		--with-stdc++lib=dynamic \
		--with-extra-cflags="${_CFLAGS}" \
		--with-extra-cxxflags="${_CXXFLAGS}" \
		--with-extra-ldflags="${_LDFLAGS}" \
		--with-libjpeg=system \
		--with-giflib=system \
		--with-libpng=system \
		--with-lcms=system \
		--with-zlib=system \
		--with-native-debug-symbols=none \
		--enable-unlimited-crypto \
		--disable-warnings-as-errors \
		--with-extra-cflags="${_CFLAGS}" \
		--with-extra-cxxflags="${_CXXFLAGS}" \
		--with-extra-ldflags="${_LDFLAGS}" \
		--with-jvm-variants=server \
		${NUM_PROC_OPT}
	make images docs
}

# TODO: As long as the JTReg package is not available, we cannot execute the regression tests.
check() {
	cd "$_jdkrelease"

	./bin/java --version | grep "${_majorver}.${_minorver}.${_securityver}+${_updatever}"

	# Check unlimited policy has been used
	./bin/javac -d . $srcdir/TestCryptoLevel.java
	./bin/java -cp . --add-opens java.base/javax.crypto=ALL-UNNAMED TestCryptoLevel

	# Check ECC is working
	./bin/javac -d . $srcdir/TestECDSA.java
	./bin/java -cp . TestECDSA

	# Check src.zip has all sources. See RHBZ#1130490
	./bin/jar -tf ./lib/src.zip | grep 'sun.misc.Unsafe'

	# Check class files include useful debugging information
	./bin/javap -l java.lang.Object | grep "Compiled from"
	./bin/javap -l java.lang.Object | grep LineNumberTable
	./bin/javap -l java.lang.Object | grep LocalVariableTable

	# Check generated class files include useful debugging information
	./bin/javap -l java.nio.ByteBuffer | grep "Compiled from"
	./bin/javap -l java.nio.ByteBuffer | grep LineNumberTable
	./bin/javap -l java.nio.ByteBuffer | grep LocalVariableTable

}

package() {
	local file dir
	for file in lib/libawt_xawt.so \
    			lib/libjawt.so \
    			lib/libsplashscreen.so; do

   		dir=${file%/*}
   		mkdir -p "$pkgdir/$_java_home/$dir"
   		mv "$_jdkrelease/$file" "$pkgdir/$_java_home/$dir"
   	done



	local file dir
	for file in api \
				resources \
				specs \
				index.html; do

   		dir=${file%/*}
   		mkdir -p "$pkgdir/usr/share/doc/java-${_majorver}-openjdk/javadoc/$dir"
   		mv "$_docsrelease/"$file "$pkgdir/usr/share/doc/java-${_majorver}-openjdk/javadoc/$dir"
   	done

	for file in 16 \
				24 \
				32 \
				48; do

   		dir=${file%/*}
   		mkdir -p "$pkgdir/usr/share/icons/hicolor/${file}x${file}/apps"
   		mv "$builddir"/src/java.desktop/unix/classes/sun/awt/X11/java-icon${file}.png "$pkgdir/usr/share/icons/hicolor/${file}x${file}/apps/java-${_majorver}-openjdk.png"
   	done

   	mkdir -p "$pkgdir/usr/share/licenses/java-${_majorver}-openjdk"
   	mv "$_jdkrelease/legal/"* "$pkgdir/usr/share/licenses/java-${_majorver}-openjdk/"

   	mkdir -p "$pkgdir/usr/share/man/"
   	mv "$_jdkrelease/man/man1" "$pkgdir/usr/share/man/"
}

jmods() {
	pkgdesc="JMods for OpenJDK ${_majorver}"

	local file dir
	for file in jmods/*.jmod; do

   		dir=${file%/*}
   		mkdir -p "$subpkgdir/$_java_home/$dir"
   		mv "$_jdkrelease/"$file "$subpkgdir/$_java_home/$dir"
   	done
}

headless() {
	pkgdesc="OpenJDK ${_majorver} Headless Runtime Environment"
	install="openjdk11-headless.post-install openjdk11-headless.post-upgrade"

	local file dir
	for file in lib/server/* \
				lib/jfr/* \
				lib/jli/* \
				lib/classlist \
				lib/jexec \
				lib/jrt-fs.jar \
				lib/jvm.cfg \
				lib/*.so \
				lib/modules \
				lib/psfont.properties.ja \
				lib/psfontj2d.properties \
				lib/tzdb.dat \
				bin/java \
				bin/jjs \
				bin/keytool \
				bin/pack200 \
				bin/rmid \
				bin/rmiregistry \
				bin/unpack200; do

   		dir=${file%/*}
   		mkdir -p "$subpkgdir/$_java_home/$dir"
   		mv "$_jdkrelease/"$file "$subpkgdir/$_java_home/$dir"
   	done
	mkdir -p "$subpkgdir/etc/java/java-${_majorver}-openjdk"
	mv "$_jdkrelease/conf" "$subpkgdir/etc/java/java-${_majorver}-openjdk/"
	ln -sf /etc/java/java-${_majorver}-openjdk/conf "$subpkgdir/$_java_home/conf"
}

dev() {
	pkgdesc="OpenJDK ${_majorver} development tools"
	depends="$pkgname-headless"

	local file dir
	for file in include/*.h \
				include/linux/*.h \
				lib/ct.sym \
				bin/jaotc \
				bin/jar \
				bin/jarsigner \
				bin/javac \
				bin/javadoc \
				bin/javap \
				bin/jcmd \
				bin/jconsole \
				bin/jdb \
				bin/jdeprscan \
				bin/jdeps \
				bin/jhsdb \
				bin/jimage \
				bin/jinfo \
				bin/jlink \
				bin/jmap \
				bin/jmod \
				bin/jps \
				bin/jrunscript \
				bin/jshell \
				bin/jstack \
				bin/jstat \
				bin/jstatd \
				bin/rmic \
				bin/serialver; do

   		dir=${file%/*}
   		mkdir -p "$subpkgdir/$_java_home/$dir"
   		mv "$_jdkrelease/"$file "$subpkgdir/$_java_home/$dir"
   	done
}

examples() {
	pkgdesc="OpenJDK ${_majorver} examples"
	depends="$pkgname-headless"

	mkdir -p "$subpkgdir/$_java_home/"
	mv "$_jdkrelease/demo" "$subpkgdir/$_java_home/"
	mv "$builddir/src/sample" "$subpkgdir/$_java_home/"
}

src() {
	pkgdesc="OpenJDK ${_majorver} Source Bundle"
	depends="$pkgname-headless"

	mkdir -p "$subpkgdir/$_java_home/lib"
	mv "$_jdkrelease/lib/src.zip" "$subpkgdir/$_java_home/lib"
}
sha512sums="e96b0ef41ff18ca5b51632fd290bbe91d84376f9e024487016554af67f622a7b96a3033799106bd9a6cce2f0b0a9bdb582cfb849acfd428257a6d0e346572072  jdk-11.0.2+9.tar.bz2
80fac378e265eb7e6ee9b790a511582c7b52ac8b08bb515b9b3922f2cb634133cb347d398d804ddb41e7d619ac4eb850d32d66ad9bf364f0beefdfd776a82c39  10-portola-initial-musl-support.patch
b88e45d20d9b3bf16e12e262c20b7f4856094b6844d6e701d0d6daa8e77eb2815d360c412eeaa737d7114737a7caec2fb91d76098d2febf147aeb42b3e77c957  20-portola-use-jdk-portola-as-jib-product-name.patch
ae8b0782fdd981328ae80cb81b43d8fef74d4d5b2a759c58163b48d900c7a601088edf75204d80c361ba107f0badada04a909f61ee8c248f2020316a177c9894  30-portola-fix-jtreg-test-Basic.patch
cdbcb0feaad4413753fa000ac50f41e7b2e5b43c1b82634d7383742428519ad84170f4eb8b620a469fc75e98f2143a6f2940b73d9dedd7862c4c18f050278bd4  40-portola-fix-jtreg-test-InfoTest.patch
31614e225a8edd97cb5122cb75a3160032212ca4e14d4783783245191fe178d3f09449e61f28b11eade3b9cef2b8a5374fb735e0a9f496194f41e45d18ce6a39  50-portola-provide-default-java-stacksize-as-argument-to-pthread_create.patch
af36197428c4dd2fe12fcb04c2db244ec8c1d9781ef8019c318d0a560c3e138929e376a6b21c09b16d88a93d8acec34b075e7b20c13085fd480816d845ffb06e  60-portola-merge-JvmFlags.patch
49cdfc5e46616fa71f2289fc486778356edb41ab2895223acbedd89767fca2275c545077619e3c86a712191b76d3b5675744069c51ccaa43a660db9bb9a6ac0c  70-portola-exclude-nativeLibraryTest.java-on-musl.patch
7a761b03553193b21a35b947f43f74e208e81d3016748b1e9b948274218a0744ec7f3ae9969b909abab82d9fc3b30540a3b76db0e548d276c5121c48a70baef4  80-portola-fix-uninitialized-variable-build-errors.patch
b02dff8d549f88317bb4c741a9e269e8d59eef990197d085388fc49c7423a4eb9367dbe1e02bffb10e7862f5980301eb58d4494e177d0e8f60af6b05c7fbbe60  TestCryptoLevel.java
27e91edef89d26c0c5b9a813e2045f8d2b348745a506ae37b34b660fa7093da9a4e0e676ea41dc4a5c901bce02e5304d95e90f68d6c99cbf461b2da40a7a9853  TestECDSA.java"
