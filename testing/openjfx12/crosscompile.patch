--- old/build.gradle
+++ new/build.gradle
@@ -2509,6 +2509,12 @@
 
 }
 
+def pkgConfigEnv = [
+    PKG_CONFIG_PATH: "$PKG_CONFIG_PATH",
+    PKG_CONFIG_SYSROOT_DIR: "$PKG_CONFIG_SYSROOT_DIR"
+]
+
+
 project(":media") {
     configurations {
         media
@@ -2614,6 +2620,7 @@
 
             doLast {
                 exec {
+                    environment(pkgConfigEnv)
                     commandLine ("make", "${makeJobsFlag}", "-C", "${nativeSrcDir}/jfxmedia/projects/${projectDir}")
                     args("JAVA_HOME=${JDK_HOME}", "GENERATED_HEADERS_DIR=${generatedHeadersDir}",
                          "OUTPUT_DIR=${nativeOutputDir}", "BUILD_TYPE=${buildType}", "BASE_NAME=jfxmedia",
@@ -2643,6 +2650,7 @@
                 enabled = IS_COMPILE_MEDIA
                 doLast {
                     exec {
+                        environment(pkgConfigEnv)
                         commandLine ("make", "${makeJobsFlag}", "-C", "${nativeSrcDir}/gstreamer/projects/${projectDir}/gstreamer-lite")
                         args("OUTPUT_DIR=${nativeOutputDir}", "BUILD_TYPE=${buildType}", "BASE_NAME=gstreamer-lite",
                              IS_64 ? "ARCH=x64" : "ARCH=x32", "CC=${mediaProperties.compiler}",
@@ -2661,6 +2669,7 @@
 
                 doLast {
                     exec {
+                        environment(pkgConfigEnv)
                         commandLine ("make", "${makeJobsFlag}", "-C", "${nativeSrcDir}/gstreamer/projects/${projectDir}/fxplugins")
                         args("OUTPUT_DIR=${nativeOutputDir}", "BUILD_TYPE=${buildType}", "BASE_NAME=fxplugins",
                              IS_64 ? "ARCH=x64" : "ARCH=x32",
@@ -2789,6 +2798,7 @@
                                 }
                                 exec {
                                     workingDir("$libavDir")
+                                    environment(pkgConfigEnv)
                                     commandLine("make")
                                 }
                             }
@@ -2857,6 +2867,7 @@
                                 }
                                 exec {
                                     workingDir("$libavDir")
+                                    environment(pkgConfigEnv)
                                     commandLine("make")
                                 }
                             }
@@ -2928,6 +2939,7 @@
                                 }
                                 exec {
                                     workingDir("$libavDir")
+                                    environment(pkgConfigEnv)
                                     commandLine("make")
                                 }
                             }
@@ -2962,6 +2974,7 @@
                                 File dir = file(libavDir)
                                 if (dir.exists()) {
                                     exec {
+                                        environment(pkgConfigEnv)
                                         commandLine ("make", "${makeJobsFlag}", "-C", "${nativeSrcDir}/gstreamer/projects/linux/avplugin")
                                         args("CC=${mediaProperties.compiler}", "LINKER=${mediaProperties.linker}",
                                              "OUTPUT_DIR=${nativeOutputDir}", "BUILD_TYPE=${buildType}",
@@ -2976,6 +2989,7 @@
                                 File dir = file(libavDir)
                                 if (dir.exists()) {
                                     exec {
+                                        environment(pkgConfigEnv)
                                         commandLine ("make", "${makeJobsFlag}", "-C", "${nativeSrcDir}/gstreamer/projects/linux/avplugin")
                                         args("CC=${mediaProperties.compiler}", "LINKER=${mediaProperties.linker}",
                                              "OUTPUT_DIR=${nativeOutputDir}", "BUILD_TYPE=${buildType}",
@@ -2990,6 +3004,7 @@
                                 File dir = file(libavDir)
                                 if (dir.exists()) {
                                     exec {
+                                        environment(pkgConfigEnv)
                                         commandLine ("make", "${makeJobsFlag}", "-C", "${nativeSrcDir}/gstreamer/projects/linux/avplugin")
                                         args("CC=${mediaProperties.compiler}", "LINKER=${mediaProperties.linker}",
                                              "OUTPUT_DIR=${nativeOutputDir}", "BUILD_TYPE=${buildType}",
@@ -3001,6 +3016,7 @@
                         } else {
                             // Building fxavcodec plugin (libav plugin)
                             exec {
+                                environment(pkgConfigEnv)
                                 commandLine ("make", "${makeJobsFlag}", "-C", "${nativeSrcDir}/gstreamer/projects/linux/avplugin")
                                 args("CC=${mediaProperties.compiler}", "LINKER=${mediaProperties.linker}",
                                      "OUTPUT_DIR=${nativeOutputDir}", "BUILD_TYPE=${buildType}",
@@ -3199,7 +3215,7 @@
                 exec {
                     workingDir("$webkitOutputDir")
                     commandLine("perl", "$projectDir/src/main/native/Tools/Scripts/set-webkit-configuration", "--$webkitConfig")
-                    environment(["WEBKIT_OUTPUTDIR" : webkitOutputDir])
+                    environment(["WEBKIT_OUTPUTDIR" : webkitOutputDir, "CC" : CC, "CXX" : CXX, "AR" : AR])
                 }
 
                 exec {
@@ -3245,6 +3261,9 @@
                         "JAVA_HOME"       : JDK_HOME,
                         "WEBKIT_OUTPUTDIR" : webkitOutputDir,
                         "PYTHONDONTWRITEBYTECODE" : "1",
+                        "CC" : CC,
+                        "CXX" : CXX,
+                        "AR" : AR
                     ])
 
                     def targetCpuBitDepthSwitch = ""
--- old/buildSrc/linux.gradle
+++ new/buildSrc/linux.gradle
@@ -54,11 +54,13 @@
         commonFlags, "-I$JDK_HOME/include", "-I$JDK_HOME/include/linux", "-c",
         "-ffunction-sections", "-fdata-sections",
         IS_DEBUG_NATIVE ? ["-ggdb", "-DVERBOSE"] : ["-O2", "-DNDEBUG"]].flatten()
+ccFlags.addAll(ext.EXTRA_CXXFLAGS.split(" "))
 def ccFlagsGTK3 = ccFlags
 //ccFlags.addAll(["-Wnon-virtual-dtor", "-Woverloaded-virtual", "-std=c++0x"])
 def linkFlags = ["-static-libgcc", "-static-libstdc++", "-shared", commonFlags,
                  "-z", "relro",
                  "-Wl,--gc-sections"].flatten()
+linkFlags.addAll(ext.EXTRA_LDFLAGS.split(" "))
 
 if (IS_DEBUG_NATIVE) {
     linkFlags += "-g"
@@ -77,11 +79,17 @@
 def gtk3LinkFlags = [ ];
 LINUX.buildGTK3 = true
 
+def pkgConfigEnv = [
+    PKG_CONFIG_PATH: "$PKG_CONFIG_PATH",
+    PKG_CONFIG_SYSROOT_DIR: "$PKG_CONFIG_SYSROOT_DIR"
+]
+
 // Create $buildDir/linux_tools.properties file and load props from it
 setupTools("linux_gtk2",
     { propFile ->
         ByteArrayOutputStream results1 = new ByteArrayOutputStream();
         exec {
+            environment(pkgConfigEnv)
             commandLine("${toolchainDir}pkg-config", "--cflags", "gtk+-2.0", "gthread-2.0", "xtst")
             setStandardOutput(results1);
         }
@@ -89,6 +97,7 @@
 
         ByteArrayOutputStream results3 = new ByteArrayOutputStream();
         exec {
+            environment(pkgConfigEnv)
             commandLine("${toolchainDir}pkg-config", "--libs", "gtk+-2.0", "gthread-2.0", "xtst")
             setStandardOutput(results3);
         }
@@ -110,6 +119,7 @@
     { propFile ->
         ByteArrayOutputStream results2 = new ByteArrayOutputStream();
         exec {
+            environment(pkgConfigEnv)
             commandLine("${toolchainDir}pkg-config", "--cflags", "gtk+-3.0", "gthread-2.0", "xtst")
             setStandardOutput(results2);
             ignoreExitValue(true)
@@ -118,6 +128,7 @@
 
         ByteArrayOutputStream results4 = new ByteArrayOutputStream();
         exec {
+            environment(pkgConfigEnv)
             commandLine("${toolchainDir}pkg-config", "--libs", "gtk+-3.0", "gthread-2.0", "xtst")
             setStandardOutput(results4);
             ignoreExitValue(true)
@@ -144,6 +155,7 @@
     { propFile ->
         ByteArrayOutputStream results = new ByteArrayOutputStream();
         exec {
+            environment(pkgConfigEnv)
             commandLine "${toolchainDir}pkg-config", "--cflags", "pangoft2"
             standardOutput = results
         }
@@ -151,6 +163,7 @@
 
         results = new ByteArrayOutputStream();
         exec {
+            environment(pkgConfigEnv)
             commandLine "${toolchainDir}pkg-config", "--libs", "pangoft2"
             standardOutput = results
         }
@@ -175,6 +188,7 @@
     { propFile ->
         ByteArrayOutputStream results = new ByteArrayOutputStream();
         exec {
+            environment(pkgConfigEnv)
             commandLine "${toolchainDir}pkg-config", "--cflags", "freetype2"
             standardOutput = results
         }
@@ -182,6 +196,7 @@
 
         results = new ByteArrayOutputStream();
         exec {
+            environment(pkgConfigEnv)
             commandLine "${toolchainDir}pkg-config", "--libs", "freetype2"
             standardOutput = results
         }
@@ -199,8 +214,8 @@
     }
 )
 
-def compiler = IS_COMPILE_PARFAIT ? "parfait-gcc" : "${toolchainDir}gcc";
-def linker = IS_COMPILE_PARFAIT ? "parfait-g++" : "${toolchainDir}g++";
+def compiler = ext.CC;
+def linker = ext.CXX;
 
 LINUX.glass = [:]
 LINUX.glass.variants = ["glass", "glassgtk2"]
@@ -316,7 +331,7 @@
 LINUX.media = [:]
 LINUX.media.compiler = compiler
 LINUX.media.linker = linker
-LINUX.media.ar = "${toolchainDir}ar"
+LINUX.media.ar = ext.AR
 
 LINUX.webkit = [:]
 LINUX.webkit.compiler = compiler
