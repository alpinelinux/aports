diff --git a/src/rbd_replay/Replayer.cc b/src/rbd_replay/Replayer.cc
index ea0f9a0..8d15378 100644
--- a/src/rbd_replay/Replayer.cc
+++ b/src/rbd_replay/Replayer.cc
@@ -339,7 +339,7 @@ void Replayer::wait_for_actions(const action::Dependencies &deps) {
     dout(DEPGRAPH_LEVEL) << "Finished waiting for " << dep.id << " after " << micros << " microseconds" << dendl;
     // Apparently the nanoseconds constructor is optional:
     // http://www.boost.org/doc/libs/1_46_0/doc/html/date_time/details.html#compile_options
-    boost::system_time sub_release_time(action_completed_time + boost::posix_time::microseconds(dep.time_delta * m_latency_multiplier / 1000));
+    boost::system_time sub_release_time(action_completed_time + boost::posix_time::microseconds(long(dep.time_delta * m_latency_multiplier / 1000)));
     if (sub_release_time > release_time) {
       release_time = sub_release_time;
     }
diff --git a/src/test/librbd/test_mock_Journal.cc b/src/test/librbd/test_mock_Journal.cc
index ced44da..82926dc 100644
--- a/src/test/librbd/test_mock_Journal.cc
+++ b/src/test/librbd/test_mock_Journal.cc
@@ -465,7 +465,7 @@ public:
     expect_get_max_append_size(mock_journaler, 1 << 16);
     expect_start_replay(
       mock_image_ctx, mock_journaler,
-      std::bind(&invoke_replay_complete, _1, 0));
+      std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
 
     MockJournalReplay mock_journal_replay;
     expect_stop_replay(mock_journaler);
@@ -513,7 +513,7 @@ TEST_F(TestMockJournal, StateTransitions) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_ready, _1));
+    std::bind(&invoke_replay_ready, std::placeholders::_1));
 
   ::journal::MockReplayEntry mock_replay_entry;
   MockJournalReplay mock_journal_replay;
@@ -522,11 +522,11 @@ TEST_F(TestMockJournal, StateTransitions) {
   expect_try_pop_front(mock_image_ctx, mock_journaler, true, mock_replay_entry);
   expect_replay_process(mock_journal_replay);
   expect_try_pop_front(mock_image_ctx, mock_journaler, false, mock_replay_entry,
-                       std::bind(&invoke_replay_ready, _1));
+                       std::bind(&invoke_replay_ready, std::placeholders::_1));
   expect_try_pop_front(mock_image_ctx, mock_journaler, true, mock_replay_entry);
   expect_replay_process(mock_journal_replay);
   expect_try_pop_front(mock_image_ctx, mock_journaler, false, mock_replay_entry,
-                       std::bind(&invoke_replay_complete, _1, 0));
+                       std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
 
   expect_stop_replay(mock_journaler);
   expect_shut_down_replay(mock_image_ctx, mock_journal_replay, 0);
@@ -582,7 +582,7 @@ TEST_F(TestMockJournal, ReplayCompleteError) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_complete, _1, -EINVAL));
+    std::bind(&invoke_replay_complete, std::placeholders::_1, -EINVAL));
 
   MockJournalReplay mock_journal_replay;
   expect_stop_replay(mock_journaler);
@@ -596,7 +596,7 @@ TEST_F(TestMockJournal, ReplayCompleteError) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_complete, _1, 0));
+    std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
 
   expect_stop_replay(mock_journaler);
   expect_shut_down_replay(mock_image_ctx, mock_journal_replay, 0);
@@ -628,14 +628,14 @@ TEST_F(TestMockJournal, FlushReplayError) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_ready, _1));
+    std::bind(&invoke_replay_ready, std::placeholders::_1));
 
   ::journal::MockReplayEntry mock_replay_entry;
   MockJournalReplay mock_journal_replay;
   expect_try_pop_front(mock_image_ctx, mock_journaler, true, mock_replay_entry);
   expect_replay_process(mock_journal_replay);
   expect_try_pop_front(mock_image_ctx, mock_journaler, false, mock_replay_entry,
-                       std::bind(&invoke_replay_complete, _1, 0));
+                       std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
   expect_stop_replay(mock_journaler);
   expect_shut_down_replay(mock_image_ctx, mock_journal_replay, -EINVAL);
   expect_shut_down_journaler(mock_journaler);
@@ -647,7 +647,7 @@ TEST_F(TestMockJournal, FlushReplayError) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_complete, _1, 0));
+    std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
 
   expect_stop_replay(mock_journaler);
   expect_shut_down_replay(mock_image_ctx, mock_journal_replay, 0);
@@ -679,7 +679,7 @@ TEST_F(TestMockJournal, CorruptEntry) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_ready, _1));
+    std::bind(&invoke_replay_ready, std::placeholders::_1));
 
   ::journal::MockReplayEntry mock_replay_entry;
   MockJournalReplay mock_journal_replay;
@@ -696,7 +696,7 @@ TEST_F(TestMockJournal, CorruptEntry) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_complete, _1, 0));
+    std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
   expect_stop_replay(mock_journaler);
   expect_shut_down_replay(mock_image_ctx, mock_journal_replay, 0);
   expect_start_append(mock_journaler);
@@ -727,7 +727,7 @@ TEST_F(TestMockJournal, StopError) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_complete, _1, 0));
+    std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
 
   MockJournalReplay mock_journal_replay;
   expect_stop_replay(mock_journaler);
@@ -760,7 +760,7 @@ TEST_F(TestMockJournal, ReplayOnDiskPreFlushError) {
 
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_ready, _1));
+    std::bind(&invoke_replay_ready, std::placeholders::_1));
 
   ::journal::MockReplayEntry mock_replay_entry;
   MockJournalReplay mock_journal_replay;
@@ -786,7 +786,7 @@ TEST_F(TestMockJournal, ReplayOnDiskPreFlushError) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler, {
-      std::bind(&invoke_replay_complete, _1, 0)
+      std::bind(&invoke_replay_complete, std::placeholders::_1, 0)
     });
 
   expect_stop_replay(mock_journaler);
@@ -840,14 +840,14 @@ TEST_F(TestMockJournal, ReplayOnDiskPostFlushError) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_ready, _1));
+    std::bind(&invoke_replay_ready, std::placeholders::_1));
 
   ::journal::MockReplayEntry mock_replay_entry;
   MockJournalReplay mock_journal_replay;
   expect_try_pop_front(mock_image_ctx, mock_journaler, true, mock_replay_entry);
   expect_replay_process(mock_journal_replay);
   expect_try_pop_front(mock_image_ctx, mock_journaler, false, mock_replay_entry,
-                       std::bind(&invoke_replay_complete, _1, 0));
+                       std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
   expect_stop_replay(mock_journaler);
 
   Context *on_flush = nullptr;
@@ -863,7 +863,7 @@ TEST_F(TestMockJournal, ReplayOnDiskPostFlushError) {
   expect_get_max_append_size(mock_journaler, 1 << 16);
   expect_start_replay(
     mock_image_ctx, mock_journaler,
-    std::bind(&invoke_replay_complete, _1, 0));
+    std::bind(&invoke_replay_complete, std::placeholders::_1, 0));
 
   expect_stop_replay(mock_journaler);
   expect_shut_down_replay(mock_image_ctx, mock_journal_replay, 0);
