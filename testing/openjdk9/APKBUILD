# Contributor: Holger Jaekel <holger.jaekel@gmx.de>
# Maintainer: Holger Jaekel <holger.jaekel@gmx.de>
pkgname=openjdk9
_majorver=9
_minorver=0
_securityver=4
_updatever=12
pkgver=${_majorver}.${_minorver}.${_securityver}.u${_updatever}
_hg_version_tag=${_majorver}.${_minorver}.${_securityver}+${_updatever}
_hg_tag=jdk-${_hg_version_tag}
pkgrel=0
pkgdesc="OpenJDK Java ${_majorver} environment"
url="http://openjdk.java.net/"
arch="all"
license="GPLv2+CE"
depends="$pkgname-headless"
depends_dev=""
makedepends="
	$depends_dev
	alsa-lib-dev
	autoconf
	bash
	cups-dev
	fontconfig-dev
	giflib-dev
	graphviz
	grep
	lcms2-dev
	libelf-dev
	libexecinfo-dev
	libjpeg-turbo-dev
	libpng-dev
	libx11-dev
	libxext-dev
	libxrender-dev
	libxt-dev
	libxtst-dev
	linux-headers
	openjdk8
	unzip
	zip
	zlib-dev
	"

case $CARCH in
x86)	_jarch=i386;;
x86_64)	_jarch=amd64;;
arm*)	_jarch=aarch32;;
*)		_jarch="$CARCH";;
esac

_java_home="/usr/lib/jvm/java-9-openjdk"
_jrelib="$_java_home/jre/lib/$_jarch"

install=""
subpackages="
	$pkgname-jmods
	$pkgname-headless
	$pkgname-dev
	$pkgname-examples:examples:noarch
	$pkgname-doc
	$pkgname-src:src:noarch
	"
source="
	http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/archive/${_hg_tag}.tar.bz2
	corba-${_hg_version_tag}.tar.bz2::http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/corba/archive/${_hg_tag}.tar.bz2
	hotspot-${_hg_version_tag}.tar.bz2::http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/hotspot/archive/${_hg_tag}.tar.bz2
	jaxp-${_hg_version_tag}.tar.bz2::http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/jaxp/archive/${_hg_tag}.tar.bz2
	jaxws-${_hg_version_tag}.tar.bz2::http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/jaxws/archive/${_hg_tag}.tar.bz2
	jdk-jdk-${_hg_version_tag}.tar.bz2::http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/jdk/archive/${_hg_tag}.tar.bz2
	langtools-${_hg_version_tag}.tar.bz2::http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/langtools/archive/${_hg_tag}.tar.bz2
	nashorn-${_hg_version_tag}.tar.bz2::http://hg.openjdk.java.net/jdk-updates/jdk${_majorver}u/nashorn/archive/${_hg_tag}.tar.bz2

	10-portola.patch
	20-portola-hotspot.patch
	30-portola-jdk.patch

	TestCryptoLevel.java
	TestECDSA.java
	"

builddir="$srcdir/jdk${_majorver}u-${_hg_tag}"
_jdkrelease="$builddir/build/linux-${CARCH}-normal-server-release/images/jdk"
_docsrelease="$builddir/build/linux-${CARCH}-normal-server-release/images/docs"

unpack() {
	if [ -z "$force" ]; then
		verify
		initdcheck
	fi
	mkdir -p "$srcdir"
	msg "Unpacking sources..."
	tar -C "$srcdir" -jxf ${_hg_tag}.tar.bz2

	tar -C "$builddir" -jxf corba-${_hg_version_tag}.tar.bz2
	mv "$builddir/corba-${_hg_tag}" "$builddir/corba"

	tar -C "$builddir" -jxf hotspot-${_hg_version_tag}.tar.bz2
	mv "$builddir/hotspot-${_hg_tag}" "$builddir/hotspot"

	tar -C "$builddir" -jxf jaxp-${_hg_version_tag}.tar.bz2
	mv "$builddir/jaxp-${_hg_tag}" "$builddir/jaxp"

	tar -C "$builddir" -jxf jaxws-${_hg_version_tag}.tar.bz2
	mv "$builddir/jaxws-${_hg_tag}" "$builddir/jaxws"

	tar -C "$builddir" -jxf jdk-jdk-${_hg_version_tag}.tar.bz2
	mv "$builddir/jdk-${_hg_tag}" "$builddir/jdk"

	tar -C "$builddir" -jxf langtools-${_hg_version_tag}.tar.bz2
	mv "$builddir/langtools-${_hg_tag}" "$builddir/langtools"

	tar -C "$builddir" -jxf nashorn-${_hg_version_tag}.tar.bz2
	mv "$builddir/nashorn-${_hg_tag}" "$builddir/nashorn"
}

build() {
	cd "$builddir"
	NUM_PROC_OPT=''
	MAKEFLAG_J=$(echo ${MAKEFLAGS} | sed -En 's/.*-j([0-9]+).*/\1/p')
	if [ -n "${MAKEFLAG_J}" ]; then
		# http://hg.openjdk.java.net/jdk10/jdk10/file/85e6cb013b98/make/InitSupport.gmk#l105
		echo "Removing '-j${MAKEFLAG_J}' from MAKEFLAGS to prevent build fail. Passing it directly to ./configure."
		export MAKEFLAGS=${MAKEFLAGS/-j${MAKEFLAG_J}/}
		NUM_PROC_OPT="--with-num-cores=${MAKEFLAG_J}"
	fi

	# CFLAGS, CXXFLAGS and LDFLAGS are ignored as shown by a warning
	# in the output of ./configure unless used like such:
	#  --with-extra-cflags="${CFLAGS}"
	#  --with-extra-cxxflags="${CXXFLAGS}"
	#  --with-extra-ldflags="${LDFLAGS}"
	# See also paragraph "Configure Control Variables from "jdk${_majorver}-${_hg_tag}/common/doc/building.md
	_CFLAGS="$CFLAGS"
	_CXXFLAGS="$CXXFLAGS"
	_LDFLAGS="$LDFLAGS"
	unset CFLAGS
	unset CXXFLAGS
	unset LDFLAGS
	unset MAKEFLAGS

	echo ${NUM_PROC_OPT}

	bash configure \
		--with-version-build="${_updatever}" \
		--with-version-pre="" \
		--with-version-opt="" \
		--with-stdc++lib=dynamic \
		--with-extra-cflags="${_CFLAGS}" \
		--with-extra-cxxflags="${_CXXFLAGS}" \
		--with-extra-ldflags="${_LDFLAGS}" \
		--with-libjpeg=system \
		--with-giflib=system \
		--with-libpng=system \
		--with-lcms=system \
		--with-zlib=system \
		--with-native-debug-symbols=none \
		--enable-unlimited-crypto \
		--disable-warnings-as-errors \
		--with-extra-cflags="${_CFLAGS}" \
		--with-extra-cxxflags="${_CXXFLAGS}" \
		--with-extra-ldflags="${_LDFLAGS}" \
		--with-jvm-variants=server \
		${NUM_PROC_OPT}
	make images docs
}

# TODO: As long as the JTReg package is not available, we cannot execute the regression tests.
check() {
	cd "$_jdkrelease"

	./bin/java --version | grep "${_majorver}.${_minorver}.${_securityver}+${_updatever}"

	# Check unlimited policy has been used
	./bin/javac -d . $srcdir/TestCryptoLevel.java
	./bin/java -cp . --add-opens java.base/javax.crypto=ALL-UNNAMED TestCryptoLevel

	# Check ECC is working
	./bin/javac -d . $srcdir/TestECDSA.java
	./bin/java -cp . TestECDSA

	# Check src.zip has all sources. See RHBZ#1130490
	./bin/jar -tf ./lib/src.zip | grep 'sun.misc.Unsafe'

	# Check class files include useful debugging information
	./bin/javap -l java.lang.Object | grep "Compiled from"
	./bin/javap -l java.lang.Object | grep LineNumberTable
	./bin/javap -l java.lang.Object | grep LocalVariableTable

	# Check generated class files include useful debugging information
	./bin/javap -l java.nio.ByteBuffer | grep "Compiled from"
	./bin/javap -l java.nio.ByteBuffer | grep LineNumberTable
	./bin/javap -l java.nio.ByteBuffer | grep LocalVariableTable

}

package() {
	local file dir
	for file in lib/libawt_xawt.so \
				lib/libjawt.so \
				lib/libsplashscreen.so; do

			dir=${file%/*}
			mkdir -p "$pkgdir/$_java_home/$dir"
			mv "$_jdkrelease/$file" "$pkgdir/$_java_home/$dir"
	done

	local file dir
	for file in api \
				resources \
				specs \
				index.html; do

		dir=${file%/*}
		mkdir -p "$pkgdir/usr/share/doc/java-${_majorver}-openjdk/javadoc/$dir"
		mv "$_docsrelease/"$file "$pkgdir/usr/share/doc/java-${_majorver}-openjdk/javadoc/$dir"
	done

	for file in 16 \
				24 \
				32 \
				48; do

		dir=${file%/*}
		mkdir -p "$pkgdir/usr/share/icons/hicolor/${file}x${file}/apps"
		mv "$builddir"/jdk/src/java.desktop/unix/classes/sun/awt/X11/java-icon${file}.png \
		   "$pkgdir/usr/share/icons/hicolor/${file}x${file}/apps/java-${_majorver}-openjdk.png"
	done

	mkdir -p "$pkgdir/usr/share/licenses/java-${_majorver}-openjdk"
	mv "$_jdkrelease/legal/"* "$pkgdir/usr/share/licenses/java-${_majorver}-openjdk/"

	mkdir -p "$pkgdir/usr/share/man/"
	mv "$_jdkrelease/man/man1" "$pkgdir/usr/share/man/"
}

jmods() {
	pkgdesc="JMods for OpenJDK ${_majorver}"

	local file dir
	for file in jmods/*.jmod; do

		dir=${file%/*}
		mkdir -p "$subpkgdir/$_java_home/$dir"
		mv "$_jdkrelease/"$file "$subpkgdir/$_java_home/$dir"
	done
}

headless() {
	pkgdesc="OpenJDK ${_majorver} Headless Runtime Environment"
	install="openjdk9-headless.post-install openjdk9-headless.post-upgrade"

	local file dir
	for file in lib/server/* \
				lib/jli/* \
				lib/classlist \
				lib/jexec \
				lib/jrt-fs.jar \
				lib/jvm.cfg \
				lib/*.so \
				lib/modules \
				lib/psfont.properties.ja \
				lib/psfontj2d.properties \
				lib/tzdb.dat \
				bin/java \
				bin/jjs \
				bin/keytool \
				bin/pack200 \
				bin/rmid \
				bin/rmiregistry \
				bin/unpack200; do

		dir=${file%/*}
		mkdir -p "$subpkgdir/$_java_home/$dir"
		mv "$_jdkrelease/"$file "$subpkgdir/$_java_home/$dir"
	done
	mkdir -p "$subpkgdir/etc/java/java-${_majorver}-openjdk"
	mv "$_jdkrelease/conf" "$subpkgdir/etc/java/java-${_majorver}-openjdk/"
	ln -sf /etc/java/java-${_majorver}-openjdk/conf "$subpkgdir/$_java_home/conf"
}

dev() {
	pkgdesc="OpenJDK ${_majorver} development tools"
	depends="$pkgname-headless"

	local file dir
	for file in include/*.h \
				include/linux/*.h \
				lib/ct.sym \
				bin/jaotc \
				bin/jar \
				bin/jarsigner \
				bin/javac \
				bin/javadoc \
				bin/javah \
				bin/javap \
				bin/jcmd \
				bin/jconsole \
				bin/jdb \
				bin/jdeprscan \
				bin/jdeps \
				bin/jhsdb \
				bin/jimage \
				bin/jinfo \
				bin/jlink \
				bin/jmap \
				bin/jmod \
				bin/jps \
				bin/jrunscript \
				bin/jshell \
				bin/jstack \
				bin/jstat \
				bin/jstatd \
				bin/rmic \
				bin/serialver; do

		dir=${file%/*}
		mkdir -p "$subpkgdir/$_java_home/$dir"
		mv "$_jdkrelease/"$file "$subpkgdir/$_java_home/$dir"
	done
}

examples() {
	pkgdesc="OpenJDK ${_majorver} examples"
	depends="$pkgname-headless"

	mkdir -p "$subpkgdir/$_java_home/"
	mv "$_jdkrelease/demo" "$subpkgdir/$_java_home/"
	mv "$builddir/jdk/src/sample" "$subpkgdir/$_java_home/"
}

src() {
	pkgdesc="OpenJDK ${_majorver} Source Bundle"
	depends="$pkgname-headless"

	mkdir -p "$subpkgdir/$_java_home/lib"
	mv "$_jdkrelease/lib/src.zip" "$subpkgdir/$_java_home/lib"
}
sha512sums="cef3655ae7db657e6c81aa86587e451e58896bb6ee786495f6d757096334435b6a4de26ec3ec927da2487e135f09ce26414f8d6b9b9c508a28d3087be286b1ec  jdk-9.0.4+12.tar.bz2
455998437a9e3ff538b921025d57e19e6fb5148b3f124c9c427c3604689884d81b3ce5c9dbd93d88de26bf1b43ce76d75f75afd95e473a94973a668575e41748  corba-9.0.4+12.tar.bz2
49d93764b13085a5626bec1c3d4e790f8748c24577a4e990e76bd1006721a5b8b9a256c40bf6419df4dda6f6390e457485f90c1b1101c010476a04d9056e9f16  hotspot-9.0.4+12.tar.bz2
82f28586fd576cc01062e2ff37a917987775838910e4a5ecdfd096abec1c8d23028b77bfc87a38ada53bc30d71d89bde7408c1ae572a43c87a71ced64fd08d3a  jaxp-9.0.4+12.tar.bz2
459978a5e3ca21910781daed848229e043eea5bd82dcd20e9249934ec97a2a982126c6e37aac1a36719e3b73a5e6c8a92a50b63033149913614d8f3edfc0846e  jaxws-9.0.4+12.tar.bz2
259228d3f439dde239e38cdebb8c3bbb83804ab141d87a9c236310707de9c58cd78cd80ceb4c17755cc1048071f24462839988112c2698f7ec1453a8810610f2  jdk-jdk-9.0.4+12.tar.bz2
ef3c70be906a4b0dd9c9195c88da045909ee3ef144941fb7b4495ed66b4162f481095cad87626d2bd38e5a62134b440223cd008dd6123b6b43c00e338610a692  langtools-9.0.4+12.tar.bz2
848c6ece418e250561572ad704baeb565580098cfc5f849d4e1a3b41b916aae3487eb4d8d0b319f3a503d122ec064ed4de0678d06821c9a2bdb09c990e589c97  nashorn-9.0.4+12.tar.bz2
e8b778552f5feae2f718dd24171724a00950f24db44fff9e8cd5f17f98a73e0506bbaf8327fbec021b133286ca7ca3427987e970599f93238c803fabdbf37d52  10-portola.patch
a591e8362fb26fe4563adc5a33e65568bf0aec52bfccd004ef34c2dc011f5d428d81b7faa10e9c6e64747848547c7ed6358cd0b7fed3efb084d9739021d5daeb  20-portola-hotspot.patch
8132364715b015ff9e1bf67abda22fa5ad55e22725bd602011a331222aeef51449d17da627a6def908ae8d155cb5447f775821c781c0438a3748da7f0c7a926c  30-portola-jdk.patch
b02dff8d549f88317bb4c741a9e269e8d59eef990197d085388fc49c7423a4eb9367dbe1e02bffb10e7862f5980301eb58d4494e177d0e8f60af6b05c7fbbe60  TestCryptoLevel.java
27e91edef89d26c0c5b9a813e2045f8d2b348745a506ae37b34b660fa7093da9a4e0e676ea41dc4a5c901bce02e5304d95e90f68d6c99cbf461b2da40a7a9853  TestECDSA.java"
