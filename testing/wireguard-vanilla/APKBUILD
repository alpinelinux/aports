# Contributor: Stuart Cardall <developer@it-offshore.co.uk>
# Maintainer: Stuart Cardall <developer@it-offshore.co.uk>

# when changing _ver we *must* bump _rel
# we must also match up _toolsrel with wireguard-tools
_name=wireguard
_ver=0.0.20181018
_rel=2
_toolsrel=0

_flavor=${FLAVOR:-vanilla}
_kpkg=linux-$_flavor
_kver=4.14.81
_krel=0

_kpkgver="$_kver-r$_krel"
_kabi="$_kver-$_krel-$_flavor"

pkgname=$_name-$_flavor
pkgver=$_kver
pkgrel=$(( $_krel + $_rel ))

pkgdesc="Next generation secure network tunnel: kernel modules for $_flavor"
arch='all'
url='https://www.wireguard.com'
license="GPL-2.0"
depends="$_kpkg=$_kpkgver"
makedepends="$_kpkg-dev=$_kpkgver libmnl-dev"
install_if="wireguard-tools=$_ver-r$_toolsrel $_kpkg=$_kpkgver"
options="!check"
source="https://git.zx2c4.com/WireGuard/snapshot/WireGuard-$_ver.tar.xz"
builddir="$srcdir"/WireGuard-$_ver

prepare() {
	default_prepare
	# verify the kernel version
	local _kapkbuild=../../main/linux-$_pkgver/APKBUILD
	if [ -f $_kapkbuild ]; then
		(	. $_kapkbuild
			pkgname=$_name-$_flavor
			[ "$_kver" != "$pkgver" ] && die "please update _kver to $pkgver"
			[ "$_krel" != "$pkgrel" ] && die "please update _krel to $pkgrel"
			return 0
		)
	fi
}

build() {
	cd "$builddir"
	# only building module: see wireguard-tools for userspace
	unset LDFLAGS
	make -C src/ \
		KERNELDIR=/lib/modules/$_kabi/build \
		module
}

package() {
	cd "$builddir/src"

	local module=
	for module in *.ko; do
		install -v -D -m644 ${module} \
			"$pkgdir/lib/modules/$_kabi/extra/${module}"
	done
}

sha512sums="ab9f42bdae1b12a95faaf51d5b9e17a8635c67386feefaaa40e0395d78c3258b9afa8a1d2f64010fac4867fa0d229a4ed850fab8a24678d6c8aa2ab6e30ae1b3  WireGuard-0.0.20181018.tar.xz"
